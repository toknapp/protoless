syntax = "proto3";

package io.protoless.tests.samples;

enum Color {
  BLACK = 0;
  WHITE = 1;
  GREEN = 2;
}

message Optional {
  double double_field = 1;
  float float_field = 2;
  int32 int32_field = 3;
  int64 int64_field = 4;
  uint32 uint32_field = 5;
  uint64 uint64_field = 6;
  sint32 sint32_field = 7;
  sint64 sint64_field = 8;
  fixed32 fixed32_field = 9;
  fixed64 fixed64_field = 10;
  sfixed32 sfixed32_field = 11;
  sfixed64 sfixed64_field = 12;
  bool bool_field = 13;
  string string_field = 14;
  bytes bytes_field = 15;
  Color color_field = 16;
  uint32 zeroed_uint32_field = 17;
  uint64 zeroed_uint64_field = 18;
}

message Repeated {
  repeated double double_field = 1;
  repeated float float_field = 2;
  repeated int32 int32_field = 3;
  repeated int64 int64_field = 4;
  repeated uint32 uint32_field = 5;
  repeated uint64 uint64_field = 6;
  repeated sint32 sint32_field = 7;
  repeated sint64 sint64_field = 8;
  repeated fixed32 fixed32_field = 9;
  repeated fixed64 fixed64_field = 10;
  repeated sfixed32 sfixed32_field = 11;
  repeated sfixed64 sfixed64_field = 12;
  repeated bool bool_field = 13;
  repeated string string_field = 14;
  repeated bytes bytes_field = 15;
  repeated Color color_field = 16;
}


message OneOf {
  oneof field {
    double double_field = 1;
    float float_field = 2;
    int32 int32_field = 3;
    int64 int64_field = 4;
    uint32 uint32_field = 5;
    uint64 uint64_field = 6;
    sint32 sint32_field = 7;
    sint64 sint64_field = 8;
    fixed32 fixed32_field = 9;
    fixed64 fixed64_field = 10;
    sfixed32 sfixed32_field = 11;
    sfixed64 sfixed64_field = 12;
    bool bool_field = 13;
    string string_field = 14;
    bytes bytes_field = 15;
    Color color_field = 16;
  }
}

message Custom {
  string bigdecimal = 1;
  string bigint = 2;
  repeated sint64 uuid = 3;
  int32 short = 4;
  int32 char = 5;
}

message Nested {
  double d = 1;
  Custom m1 = 2;
  Custom m2 = 3;
  repeated Custom rm = 4;
}
