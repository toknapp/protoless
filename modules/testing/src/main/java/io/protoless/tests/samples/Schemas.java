// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/protobuf/schemas.proto

package io.protoless.tests.samples;

public final class Schemas {
  private Schemas() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code io.protoless.tests.samples.Color}
   */
  public enum Color
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BLACK = 0;</code>
     */
    BLACK(0),
    /**
     * <code>WHITE = 1;</code>
     */
    WHITE(1),
    /**
     * <code>GREEN = 2;</code>
     */
    GREEN(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BLACK = 0;</code>
     */
    public static final int BLACK_VALUE = 0;
    /**
     * <code>WHITE = 1;</code>
     */
    public static final int WHITE_VALUE = 1;
    /**
     * <code>GREEN = 2;</code>
     */
    public static final int GREEN_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Color valueOf(int value) {
      return forNumber(value);
    }

    public static Color forNumber(int value) {
      switch (value) {
        case 0: return BLACK;
        case 1: return WHITE;
        case 2: return GREEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Color>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Color> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Color>() {
            public Color findValueByNumber(int number) {
              return Color.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.protoless.tests.samples.Schemas.getDescriptor().getEnumTypes().get(0);
    }

    private static final Color[] VALUES = values();

    public static Color valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Color(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.protoless.tests.samples.Color)
  }

  public interface OptionalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.protoless.tests.samples.Optional)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double double_field = 1;</code>
     */
    double getDoubleField();

    /**
     * <code>float float_field = 2;</code>
     */
    float getFloatField();

    /**
     * <code>int32 int32_field = 3;</code>
     */
    int getInt32Field();

    /**
     * <code>int64 int64_field = 4;</code>
     */
    long getInt64Field();

    /**
     * <code>uint32 uint32_field = 5;</code>
     */
    int getUint32Field();

    /**
     * <code>uint64 uint64_field = 6;</code>
     */
    long getUint64Field();

    /**
     * <code>sint32 sint32_field = 7;</code>
     */
    int getSint32Field();

    /**
     * <code>sint64 sint64_field = 8;</code>
     */
    long getSint64Field();

    /**
     * <code>fixed32 fixed32_field = 9;</code>
     */
    int getFixed32Field();

    /**
     * <code>fixed64 fixed64_field = 10;</code>
     */
    long getFixed64Field();

    /**
     * <code>sfixed32 sfixed32_field = 11;</code>
     */
    int getSfixed32Field();

    /**
     * <code>sfixed64 sfixed64_field = 12;</code>
     */
    long getSfixed64Field();

    /**
     * <code>bool bool_field = 13;</code>
     */
    boolean getBoolField();

    /**
     * <code>string string_field = 14;</code>
     */
    java.lang.String getStringField();
    /**
     * <code>string string_field = 14;</code>
     */
    com.google.protobuf.ByteString
        getStringFieldBytes();

    /**
     * <code>bytes bytes_field = 15;</code>
     */
    com.google.protobuf.ByteString getBytesField();

    /**
     * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
     */
    int getColorFieldValue();
    /**
     * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
     */
    io.protoless.tests.samples.Schemas.Color getColorField();

    /**
     * <code>uint32 zeroed_uint32_field = 17;</code>
     */
    int getZeroedUint32Field();
  }
  /**
   * Protobuf type {@code io.protoless.tests.samples.Optional}
   */
  public  static final class Optional extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.protoless.tests.samples.Optional)
      OptionalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Optional.newBuilder() to construct.
    private Optional(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Optional() {
      doubleField_ = 0D;
      floatField_ = 0F;
      int32Field_ = 0;
      int64Field_ = 0L;
      uint32Field_ = 0;
      uint64Field_ = 0L;
      sint32Field_ = 0;
      sint64Field_ = 0L;
      fixed32Field_ = 0;
      fixed64Field_ = 0L;
      sfixed32Field_ = 0;
      sfixed64Field_ = 0L;
      boolField_ = false;
      stringField_ = "";
      bytesField_ = com.google.protobuf.ByteString.EMPTY;
      colorField_ = 0;
      zeroedUint32Field_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Optional(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {

              doubleField_ = input.readDouble();
              break;
            }
            case 21: {

              floatField_ = input.readFloat();
              break;
            }
            case 24: {

              int32Field_ = input.readInt32();
              break;
            }
            case 32: {

              int64Field_ = input.readInt64();
              break;
            }
            case 40: {

              uint32Field_ = input.readUInt32();
              break;
            }
            case 48: {

              uint64Field_ = input.readUInt64();
              break;
            }
            case 56: {

              sint32Field_ = input.readSInt32();
              break;
            }
            case 64: {

              sint64Field_ = input.readSInt64();
              break;
            }
            case 77: {

              fixed32Field_ = input.readFixed32();
              break;
            }
            case 81: {

              fixed64Field_ = input.readFixed64();
              break;
            }
            case 93: {

              sfixed32Field_ = input.readSFixed32();
              break;
            }
            case 97: {

              sfixed64Field_ = input.readSFixed64();
              break;
            }
            case 104: {

              boolField_ = input.readBool();
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              stringField_ = s;
              break;
            }
            case 122: {

              bytesField_ = input.readBytes();
              break;
            }
            case 128: {
              int rawValue = input.readEnum();

              colorField_ = rawValue;
              break;
            }
            case 136: {

              zeroedUint32Field_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Optional_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Optional_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.protoless.tests.samples.Schemas.Optional.class, io.protoless.tests.samples.Schemas.Optional.Builder.class);
    }

    public static final int DOUBLE_FIELD_FIELD_NUMBER = 1;
    private double doubleField_;
    /**
     * <code>double double_field = 1;</code>
     */
    public double getDoubleField() {
      return doubleField_;
    }

    public static final int FLOAT_FIELD_FIELD_NUMBER = 2;
    private float floatField_;
    /**
     * <code>float float_field = 2;</code>
     */
    public float getFloatField() {
      return floatField_;
    }

    public static final int INT32_FIELD_FIELD_NUMBER = 3;
    private int int32Field_;
    /**
     * <code>int32 int32_field = 3;</code>
     */
    public int getInt32Field() {
      return int32Field_;
    }

    public static final int INT64_FIELD_FIELD_NUMBER = 4;
    private long int64Field_;
    /**
     * <code>int64 int64_field = 4;</code>
     */
    public long getInt64Field() {
      return int64Field_;
    }

    public static final int UINT32_FIELD_FIELD_NUMBER = 5;
    private int uint32Field_;
    /**
     * <code>uint32 uint32_field = 5;</code>
     */
    public int getUint32Field() {
      return uint32Field_;
    }

    public static final int UINT64_FIELD_FIELD_NUMBER = 6;
    private long uint64Field_;
    /**
     * <code>uint64 uint64_field = 6;</code>
     */
    public long getUint64Field() {
      return uint64Field_;
    }

    public static final int SINT32_FIELD_FIELD_NUMBER = 7;
    private int sint32Field_;
    /**
     * <code>sint32 sint32_field = 7;</code>
     */
    public int getSint32Field() {
      return sint32Field_;
    }

    public static final int SINT64_FIELD_FIELD_NUMBER = 8;
    private long sint64Field_;
    /**
     * <code>sint64 sint64_field = 8;</code>
     */
    public long getSint64Field() {
      return sint64Field_;
    }

    public static final int FIXED32_FIELD_FIELD_NUMBER = 9;
    private int fixed32Field_;
    /**
     * <code>fixed32 fixed32_field = 9;</code>
     */
    public int getFixed32Field() {
      return fixed32Field_;
    }

    public static final int FIXED64_FIELD_FIELD_NUMBER = 10;
    private long fixed64Field_;
    /**
     * <code>fixed64 fixed64_field = 10;</code>
     */
    public long getFixed64Field() {
      return fixed64Field_;
    }

    public static final int SFIXED32_FIELD_FIELD_NUMBER = 11;
    private int sfixed32Field_;
    /**
     * <code>sfixed32 sfixed32_field = 11;</code>
     */
    public int getSfixed32Field() {
      return sfixed32Field_;
    }

    public static final int SFIXED64_FIELD_FIELD_NUMBER = 12;
    private long sfixed64Field_;
    /**
     * <code>sfixed64 sfixed64_field = 12;</code>
     */
    public long getSfixed64Field() {
      return sfixed64Field_;
    }

    public static final int BOOL_FIELD_FIELD_NUMBER = 13;
    private boolean boolField_;
    /**
     * <code>bool bool_field = 13;</code>
     */
    public boolean getBoolField() {
      return boolField_;
    }

    public static final int STRING_FIELD_FIELD_NUMBER = 14;
    private volatile java.lang.Object stringField_;
    /**
     * <code>string string_field = 14;</code>
     */
    public java.lang.String getStringField() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stringField_ = s;
        return s;
      }
    }
    /**
     * <code>string string_field = 14;</code>
     */
    public com.google.protobuf.ByteString
        getStringFieldBytes() {
      java.lang.Object ref = stringField_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringField_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTES_FIELD_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString bytesField_;
    /**
     * <code>bytes bytes_field = 15;</code>
     */
    public com.google.protobuf.ByteString getBytesField() {
      return bytesField_;
    }

    public static final int COLOR_FIELD_FIELD_NUMBER = 16;
    private int colorField_;
    /**
     * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
     */
    public int getColorFieldValue() {
      return colorField_;
    }
    /**
     * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
     */
    public io.protoless.tests.samples.Schemas.Color getColorField() {
      io.protoless.tests.samples.Schemas.Color result = io.protoless.tests.samples.Schemas.Color.valueOf(colorField_);
      return result == null ? io.protoless.tests.samples.Schemas.Color.UNRECOGNIZED : result;
    }

    public static final int ZEROED_UINT32_FIELD_FIELD_NUMBER = 17;
    private int zeroedUint32Field_;
    /**
     * <code>uint32 zeroed_uint32_field = 17;</code>
     */
    public int getZeroedUint32Field() {
      return zeroedUint32Field_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (doubleField_ != 0D) {
        output.writeDouble(1, doubleField_);
      }
      if (floatField_ != 0F) {
        output.writeFloat(2, floatField_);
      }
      if (int32Field_ != 0) {
        output.writeInt32(3, int32Field_);
      }
      if (int64Field_ != 0L) {
        output.writeInt64(4, int64Field_);
      }
      if (uint32Field_ != 0) {
        output.writeUInt32(5, uint32Field_);
      }
      if (uint64Field_ != 0L) {
        output.writeUInt64(6, uint64Field_);
      }
      if (sint32Field_ != 0) {
        output.writeSInt32(7, sint32Field_);
      }
      if (sint64Field_ != 0L) {
        output.writeSInt64(8, sint64Field_);
      }
      if (fixed32Field_ != 0) {
        output.writeFixed32(9, fixed32Field_);
      }
      if (fixed64Field_ != 0L) {
        output.writeFixed64(10, fixed64Field_);
      }
      if (sfixed32Field_ != 0) {
        output.writeSFixed32(11, sfixed32Field_);
      }
      if (sfixed64Field_ != 0L) {
        output.writeSFixed64(12, sfixed64Field_);
      }
      if (boolField_ != false) {
        output.writeBool(13, boolField_);
      }
      if (!getStringFieldBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, stringField_);
      }
      if (!bytesField_.isEmpty()) {
        output.writeBytes(15, bytesField_);
      }
      if (colorField_ != io.protoless.tests.samples.Schemas.Color.BLACK.getNumber()) {
        output.writeEnum(16, colorField_);
      }
      if (zeroedUint32Field_ != 0) {
        output.writeUInt32(17, zeroedUint32Field_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (doubleField_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, doubleField_);
      }
      if (floatField_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, floatField_);
      }
      if (int32Field_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32Field_);
      }
      if (int64Field_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, int64Field_);
      }
      if (uint32Field_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, uint32Field_);
      }
      if (uint64Field_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, uint64Field_);
      }
      if (sint32Field_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, sint32Field_);
      }
      if (sint64Field_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(8, sint64Field_);
      }
      if (fixed32Field_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, fixed32Field_);
      }
      if (fixed64Field_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, fixed64Field_);
      }
      if (sfixed32Field_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(11, sfixed32Field_);
      }
      if (sfixed64Field_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(12, sfixed64Field_);
      }
      if (boolField_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, boolField_);
      }
      if (!getStringFieldBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, stringField_);
      }
      if (!bytesField_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, bytesField_);
      }
      if (colorField_ != io.protoless.tests.samples.Schemas.Color.BLACK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, colorField_);
      }
      if (zeroedUint32Field_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, zeroedUint32Field_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.protoless.tests.samples.Schemas.Optional)) {
        return super.equals(obj);
      }
      io.protoless.tests.samples.Schemas.Optional other = (io.protoless.tests.samples.Schemas.Optional) obj;

      boolean result = true;
      result = result && (
          java.lang.Double.doubleToLongBits(getDoubleField())
          == java.lang.Double.doubleToLongBits(
              other.getDoubleField()));
      result = result && (
          java.lang.Float.floatToIntBits(getFloatField())
          == java.lang.Float.floatToIntBits(
              other.getFloatField()));
      result = result && (getInt32Field()
          == other.getInt32Field());
      result = result && (getInt64Field()
          == other.getInt64Field());
      result = result && (getUint32Field()
          == other.getUint32Field());
      result = result && (getUint64Field()
          == other.getUint64Field());
      result = result && (getSint32Field()
          == other.getSint32Field());
      result = result && (getSint64Field()
          == other.getSint64Field());
      result = result && (getFixed32Field()
          == other.getFixed32Field());
      result = result && (getFixed64Field()
          == other.getFixed64Field());
      result = result && (getSfixed32Field()
          == other.getSfixed32Field());
      result = result && (getSfixed64Field()
          == other.getSfixed64Field());
      result = result && (getBoolField()
          == other.getBoolField());
      result = result && getStringField()
          .equals(other.getStringField());
      result = result && getBytesField()
          .equals(other.getBytesField());
      result = result && colorField_ == other.colorField_;
      result = result && (getZeroedUint32Field()
          == other.getZeroedUint32Field());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOUBLE_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDoubleField()));
      hash = (37 * hash) + FLOAT_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFloatField());
      hash = (37 * hash) + INT32_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + getInt32Field();
      hash = (37 * hash) + INT64_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInt64Field());
      hash = (37 * hash) + UINT32_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + getUint32Field();
      hash = (37 * hash) + UINT64_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUint64Field());
      hash = (37 * hash) + SINT32_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + getSint32Field();
      hash = (37 * hash) + SINT64_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSint64Field());
      hash = (37 * hash) + FIXED32_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + getFixed32Field();
      hash = (37 * hash) + FIXED64_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFixed64Field());
      hash = (37 * hash) + SFIXED32_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + getSfixed32Field();
      hash = (37 * hash) + SFIXED64_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSfixed64Field());
      hash = (37 * hash) + BOOL_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBoolField());
      hash = (37 * hash) + STRING_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + getStringField().hashCode();
      hash = (37 * hash) + BYTES_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + getBytesField().hashCode();
      hash = (37 * hash) + COLOR_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + colorField_;
      hash = (37 * hash) + ZEROED_UINT32_FIELD_FIELD_NUMBER;
      hash = (53 * hash) + getZeroedUint32Field();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.protoless.tests.samples.Schemas.Optional parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.Optional parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Optional parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.Optional parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Optional parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.Optional parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Optional parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.Optional parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Optional parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.Optional parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Optional parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.Optional parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.protoless.tests.samples.Schemas.Optional prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.protoless.tests.samples.Optional}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.protoless.tests.samples.Optional)
        io.protoless.tests.samples.Schemas.OptionalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Optional_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Optional_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.protoless.tests.samples.Schemas.Optional.class, io.protoless.tests.samples.Schemas.Optional.Builder.class);
      }

      // Construct using io.protoless.tests.samples.Schemas.Optional.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        doubleField_ = 0D;

        floatField_ = 0F;

        int32Field_ = 0;

        int64Field_ = 0L;

        uint32Field_ = 0;

        uint64Field_ = 0L;

        sint32Field_ = 0;

        sint64Field_ = 0L;

        fixed32Field_ = 0;

        fixed64Field_ = 0L;

        sfixed32Field_ = 0;

        sfixed64Field_ = 0L;

        boolField_ = false;

        stringField_ = "";

        bytesField_ = com.google.protobuf.ByteString.EMPTY;

        colorField_ = 0;

        zeroedUint32Field_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Optional_descriptor;
      }

      public io.protoless.tests.samples.Schemas.Optional getDefaultInstanceForType() {
        return io.protoless.tests.samples.Schemas.Optional.getDefaultInstance();
      }

      public io.protoless.tests.samples.Schemas.Optional build() {
        io.protoless.tests.samples.Schemas.Optional result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.protoless.tests.samples.Schemas.Optional buildPartial() {
        io.protoless.tests.samples.Schemas.Optional result = new io.protoless.tests.samples.Schemas.Optional(this);
        result.doubleField_ = doubleField_;
        result.floatField_ = floatField_;
        result.int32Field_ = int32Field_;
        result.int64Field_ = int64Field_;
        result.uint32Field_ = uint32Field_;
        result.uint64Field_ = uint64Field_;
        result.sint32Field_ = sint32Field_;
        result.sint64Field_ = sint64Field_;
        result.fixed32Field_ = fixed32Field_;
        result.fixed64Field_ = fixed64Field_;
        result.sfixed32Field_ = sfixed32Field_;
        result.sfixed64Field_ = sfixed64Field_;
        result.boolField_ = boolField_;
        result.stringField_ = stringField_;
        result.bytesField_ = bytesField_;
        result.colorField_ = colorField_;
        result.zeroedUint32Field_ = zeroedUint32Field_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.protoless.tests.samples.Schemas.Optional) {
          return mergeFrom((io.protoless.tests.samples.Schemas.Optional)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.protoless.tests.samples.Schemas.Optional other) {
        if (other == io.protoless.tests.samples.Schemas.Optional.getDefaultInstance()) return this;
        if (other.getDoubleField() != 0D) {
          setDoubleField(other.getDoubleField());
        }
        if (other.getFloatField() != 0F) {
          setFloatField(other.getFloatField());
        }
        if (other.getInt32Field() != 0) {
          setInt32Field(other.getInt32Field());
        }
        if (other.getInt64Field() != 0L) {
          setInt64Field(other.getInt64Field());
        }
        if (other.getUint32Field() != 0) {
          setUint32Field(other.getUint32Field());
        }
        if (other.getUint64Field() != 0L) {
          setUint64Field(other.getUint64Field());
        }
        if (other.getSint32Field() != 0) {
          setSint32Field(other.getSint32Field());
        }
        if (other.getSint64Field() != 0L) {
          setSint64Field(other.getSint64Field());
        }
        if (other.getFixed32Field() != 0) {
          setFixed32Field(other.getFixed32Field());
        }
        if (other.getFixed64Field() != 0L) {
          setFixed64Field(other.getFixed64Field());
        }
        if (other.getSfixed32Field() != 0) {
          setSfixed32Field(other.getSfixed32Field());
        }
        if (other.getSfixed64Field() != 0L) {
          setSfixed64Field(other.getSfixed64Field());
        }
        if (other.getBoolField() != false) {
          setBoolField(other.getBoolField());
        }
        if (!other.getStringField().isEmpty()) {
          stringField_ = other.stringField_;
          onChanged();
        }
        if (other.getBytesField() != com.google.protobuf.ByteString.EMPTY) {
          setBytesField(other.getBytesField());
        }
        if (other.colorField_ != 0) {
          setColorFieldValue(other.getColorFieldValue());
        }
        if (other.getZeroedUint32Field() != 0) {
          setZeroedUint32Field(other.getZeroedUint32Field());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.protoless.tests.samples.Schemas.Optional parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.protoless.tests.samples.Schemas.Optional) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double doubleField_ ;
      /**
       * <code>double double_field = 1;</code>
       */
      public double getDoubleField() {
        return doubleField_;
      }
      /**
       * <code>double double_field = 1;</code>
       */
      public Builder setDoubleField(double value) {
        
        doubleField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double double_field = 1;</code>
       */
      public Builder clearDoubleField() {
        
        doubleField_ = 0D;
        onChanged();
        return this;
      }

      private float floatField_ ;
      /**
       * <code>float float_field = 2;</code>
       */
      public float getFloatField() {
        return floatField_;
      }
      /**
       * <code>float float_field = 2;</code>
       */
      public Builder setFloatField(float value) {
        
        floatField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float float_field = 2;</code>
       */
      public Builder clearFloatField() {
        
        floatField_ = 0F;
        onChanged();
        return this;
      }

      private int int32Field_ ;
      /**
       * <code>int32 int32_field = 3;</code>
       */
      public int getInt32Field() {
        return int32Field_;
      }
      /**
       * <code>int32 int32_field = 3;</code>
       */
      public Builder setInt32Field(int value) {
        
        int32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 int32_field = 3;</code>
       */
      public Builder clearInt32Field() {
        
        int32Field_ = 0;
        onChanged();
        return this;
      }

      private long int64Field_ ;
      /**
       * <code>int64 int64_field = 4;</code>
       */
      public long getInt64Field() {
        return int64Field_;
      }
      /**
       * <code>int64 int64_field = 4;</code>
       */
      public Builder setInt64Field(long value) {
        
        int64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 int64_field = 4;</code>
       */
      public Builder clearInt64Field() {
        
        int64Field_ = 0L;
        onChanged();
        return this;
      }

      private int uint32Field_ ;
      /**
       * <code>uint32 uint32_field = 5;</code>
       */
      public int getUint32Field() {
        return uint32Field_;
      }
      /**
       * <code>uint32 uint32_field = 5;</code>
       */
      public Builder setUint32Field(int value) {
        
        uint32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 uint32_field = 5;</code>
       */
      public Builder clearUint32Field() {
        
        uint32Field_ = 0;
        onChanged();
        return this;
      }

      private long uint64Field_ ;
      /**
       * <code>uint64 uint64_field = 6;</code>
       */
      public long getUint64Field() {
        return uint64Field_;
      }
      /**
       * <code>uint64 uint64_field = 6;</code>
       */
      public Builder setUint64Field(long value) {
        
        uint64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 uint64_field = 6;</code>
       */
      public Builder clearUint64Field() {
        
        uint64Field_ = 0L;
        onChanged();
        return this;
      }

      private int sint32Field_ ;
      /**
       * <code>sint32 sint32_field = 7;</code>
       */
      public int getSint32Field() {
        return sint32Field_;
      }
      /**
       * <code>sint32 sint32_field = 7;</code>
       */
      public Builder setSint32Field(int value) {
        
        sint32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 sint32_field = 7;</code>
       */
      public Builder clearSint32Field() {
        
        sint32Field_ = 0;
        onChanged();
        return this;
      }

      private long sint64Field_ ;
      /**
       * <code>sint64 sint64_field = 8;</code>
       */
      public long getSint64Field() {
        return sint64Field_;
      }
      /**
       * <code>sint64 sint64_field = 8;</code>
       */
      public Builder setSint64Field(long value) {
        
        sint64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 sint64_field = 8;</code>
       */
      public Builder clearSint64Field() {
        
        sint64Field_ = 0L;
        onChanged();
        return this;
      }

      private int fixed32Field_ ;
      /**
       * <code>fixed32 fixed32_field = 9;</code>
       */
      public int getFixed32Field() {
        return fixed32Field_;
      }
      /**
       * <code>fixed32 fixed32_field = 9;</code>
       */
      public Builder setFixed32Field(int value) {
        
        fixed32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 fixed32_field = 9;</code>
       */
      public Builder clearFixed32Field() {
        
        fixed32Field_ = 0;
        onChanged();
        return this;
      }

      private long fixed64Field_ ;
      /**
       * <code>fixed64 fixed64_field = 10;</code>
       */
      public long getFixed64Field() {
        return fixed64Field_;
      }
      /**
       * <code>fixed64 fixed64_field = 10;</code>
       */
      public Builder setFixed64Field(long value) {
        
        fixed64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed64 fixed64_field = 10;</code>
       */
      public Builder clearFixed64Field() {
        
        fixed64Field_ = 0L;
        onChanged();
        return this;
      }

      private int sfixed32Field_ ;
      /**
       * <code>sfixed32 sfixed32_field = 11;</code>
       */
      public int getSfixed32Field() {
        return sfixed32Field_;
      }
      /**
       * <code>sfixed32 sfixed32_field = 11;</code>
       */
      public Builder setSfixed32Field(int value) {
        
        sfixed32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed32 sfixed32_field = 11;</code>
       */
      public Builder clearSfixed32Field() {
        
        sfixed32Field_ = 0;
        onChanged();
        return this;
      }

      private long sfixed64Field_ ;
      /**
       * <code>sfixed64 sfixed64_field = 12;</code>
       */
      public long getSfixed64Field() {
        return sfixed64Field_;
      }
      /**
       * <code>sfixed64 sfixed64_field = 12;</code>
       */
      public Builder setSfixed64Field(long value) {
        
        sfixed64Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed64 sfixed64_field = 12;</code>
       */
      public Builder clearSfixed64Field() {
        
        sfixed64Field_ = 0L;
        onChanged();
        return this;
      }

      private boolean boolField_ ;
      /**
       * <code>bool bool_field = 13;</code>
       */
      public boolean getBoolField() {
        return boolField_;
      }
      /**
       * <code>bool bool_field = 13;</code>
       */
      public Builder setBoolField(boolean value) {
        
        boolField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool bool_field = 13;</code>
       */
      public Builder clearBoolField() {
        
        boolField_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object stringField_ = "";
      /**
       * <code>string string_field = 14;</code>
       */
      public java.lang.String getStringField() {
        java.lang.Object ref = stringField_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stringField_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string string_field = 14;</code>
       */
      public com.google.protobuf.ByteString
          getStringFieldBytes() {
        java.lang.Object ref = stringField_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringField_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string string_field = 14;</code>
       */
      public Builder setStringField(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stringField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string string_field = 14;</code>
       */
      public Builder clearStringField() {
        
        stringField_ = getDefaultInstance().getStringField();
        onChanged();
        return this;
      }
      /**
       * <code>string string_field = 14;</code>
       */
      public Builder setStringFieldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stringField_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesField_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes bytes_field = 15;</code>
       */
      public com.google.protobuf.ByteString getBytesField() {
        return bytesField_;
      }
      /**
       * <code>bytes bytes_field = 15;</code>
       */
      public Builder setBytesField(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bytesField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes bytes_field = 15;</code>
       */
      public Builder clearBytesField() {
        
        bytesField_ = getDefaultInstance().getBytesField();
        onChanged();
        return this;
      }

      private int colorField_ = 0;
      /**
       * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public int getColorFieldValue() {
        return colorField_;
      }
      /**
       * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public Builder setColorFieldValue(int value) {
        colorField_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public io.protoless.tests.samples.Schemas.Color getColorField() {
        io.protoless.tests.samples.Schemas.Color result = io.protoless.tests.samples.Schemas.Color.valueOf(colorField_);
        return result == null ? io.protoless.tests.samples.Schemas.Color.UNRECOGNIZED : result;
      }
      /**
       * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public Builder setColorField(io.protoless.tests.samples.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        colorField_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public Builder clearColorField() {
        
        colorField_ = 0;
        onChanged();
        return this;
      }

      private int zeroedUint32Field_ ;
      /**
       * <code>uint32 zeroed_uint32_field = 17;</code>
       */
      public int getZeroedUint32Field() {
        return zeroedUint32Field_;
      }
      /**
       * <code>uint32 zeroed_uint32_field = 17;</code>
       */
      public Builder setZeroedUint32Field(int value) {
        
        zeroedUint32Field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 zeroed_uint32_field = 17;</code>
       */
      public Builder clearZeroedUint32Field() {
        
        zeroedUint32Field_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.protoless.tests.samples.Optional)
    }

    // @@protoc_insertion_point(class_scope:io.protoless.tests.samples.Optional)
    private static final io.protoless.tests.samples.Schemas.Optional DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.protoless.tests.samples.Schemas.Optional();
    }

    public static io.protoless.tests.samples.Schemas.Optional getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Optional>
        PARSER = new com.google.protobuf.AbstractParser<Optional>() {
      public Optional parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Optional(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Optional> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Optional> getParserForType() {
      return PARSER;
    }

    public io.protoless.tests.samples.Schemas.Optional getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RepeatedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.protoless.tests.samples.Repeated)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double double_field = 1;</code>
     */
    java.util.List<java.lang.Double> getDoubleFieldList();
    /**
     * <code>repeated double double_field = 1;</code>
     */
    int getDoubleFieldCount();
    /**
     * <code>repeated double double_field = 1;</code>
     */
    double getDoubleField(int index);

    /**
     * <code>repeated float float_field = 2;</code>
     */
    java.util.List<java.lang.Float> getFloatFieldList();
    /**
     * <code>repeated float float_field = 2;</code>
     */
    int getFloatFieldCount();
    /**
     * <code>repeated float float_field = 2;</code>
     */
    float getFloatField(int index);

    /**
     * <code>repeated int32 int32_field = 3;</code>
     */
    java.util.List<java.lang.Integer> getInt32FieldList();
    /**
     * <code>repeated int32 int32_field = 3;</code>
     */
    int getInt32FieldCount();
    /**
     * <code>repeated int32 int32_field = 3;</code>
     */
    int getInt32Field(int index);

    /**
     * <code>repeated int64 int64_field = 4;</code>
     */
    java.util.List<java.lang.Long> getInt64FieldList();
    /**
     * <code>repeated int64 int64_field = 4;</code>
     */
    int getInt64FieldCount();
    /**
     * <code>repeated int64 int64_field = 4;</code>
     */
    long getInt64Field(int index);

    /**
     * <code>repeated uint32 uint32_field = 5;</code>
     */
    java.util.List<java.lang.Integer> getUint32FieldList();
    /**
     * <code>repeated uint32 uint32_field = 5;</code>
     */
    int getUint32FieldCount();
    /**
     * <code>repeated uint32 uint32_field = 5;</code>
     */
    int getUint32Field(int index);

    /**
     * <code>repeated uint64 uint64_field = 6;</code>
     */
    java.util.List<java.lang.Long> getUint64FieldList();
    /**
     * <code>repeated uint64 uint64_field = 6;</code>
     */
    int getUint64FieldCount();
    /**
     * <code>repeated uint64 uint64_field = 6;</code>
     */
    long getUint64Field(int index);

    /**
     * <code>repeated sint32 sint32_field = 7;</code>
     */
    java.util.List<java.lang.Integer> getSint32FieldList();
    /**
     * <code>repeated sint32 sint32_field = 7;</code>
     */
    int getSint32FieldCount();
    /**
     * <code>repeated sint32 sint32_field = 7;</code>
     */
    int getSint32Field(int index);

    /**
     * <code>repeated sint64 sint64_field = 8;</code>
     */
    java.util.List<java.lang.Long> getSint64FieldList();
    /**
     * <code>repeated sint64 sint64_field = 8;</code>
     */
    int getSint64FieldCount();
    /**
     * <code>repeated sint64 sint64_field = 8;</code>
     */
    long getSint64Field(int index);

    /**
     * <code>repeated fixed32 fixed32_field = 9;</code>
     */
    java.util.List<java.lang.Integer> getFixed32FieldList();
    /**
     * <code>repeated fixed32 fixed32_field = 9;</code>
     */
    int getFixed32FieldCount();
    /**
     * <code>repeated fixed32 fixed32_field = 9;</code>
     */
    int getFixed32Field(int index);

    /**
     * <code>repeated fixed64 fixed64_field = 10;</code>
     */
    java.util.List<java.lang.Long> getFixed64FieldList();
    /**
     * <code>repeated fixed64 fixed64_field = 10;</code>
     */
    int getFixed64FieldCount();
    /**
     * <code>repeated fixed64 fixed64_field = 10;</code>
     */
    long getFixed64Field(int index);

    /**
     * <code>repeated sfixed32 sfixed32_field = 11;</code>
     */
    java.util.List<java.lang.Integer> getSfixed32FieldList();
    /**
     * <code>repeated sfixed32 sfixed32_field = 11;</code>
     */
    int getSfixed32FieldCount();
    /**
     * <code>repeated sfixed32 sfixed32_field = 11;</code>
     */
    int getSfixed32Field(int index);

    /**
     * <code>repeated sfixed64 sfixed64_field = 12;</code>
     */
    java.util.List<java.lang.Long> getSfixed64FieldList();
    /**
     * <code>repeated sfixed64 sfixed64_field = 12;</code>
     */
    int getSfixed64FieldCount();
    /**
     * <code>repeated sfixed64 sfixed64_field = 12;</code>
     */
    long getSfixed64Field(int index);

    /**
     * <code>repeated bool bool_field = 13;</code>
     */
    java.util.List<java.lang.Boolean> getBoolFieldList();
    /**
     * <code>repeated bool bool_field = 13;</code>
     */
    int getBoolFieldCount();
    /**
     * <code>repeated bool bool_field = 13;</code>
     */
    boolean getBoolField(int index);

    /**
     * <code>repeated string string_field = 14;</code>
     */
    java.util.List<java.lang.String>
        getStringFieldList();
    /**
     * <code>repeated string string_field = 14;</code>
     */
    int getStringFieldCount();
    /**
     * <code>repeated string string_field = 14;</code>
     */
    java.lang.String getStringField(int index);
    /**
     * <code>repeated string string_field = 14;</code>
     */
    com.google.protobuf.ByteString
        getStringFieldBytes(int index);

    /**
     * <code>repeated bytes bytes_field = 15;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getBytesFieldList();
    /**
     * <code>repeated bytes bytes_field = 15;</code>
     */
    int getBytesFieldCount();
    /**
     * <code>repeated bytes bytes_field = 15;</code>
     */
    com.google.protobuf.ByteString getBytesField(int index);

    /**
     * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
     */
    java.util.List<io.protoless.tests.samples.Schemas.Color> getColorFieldList();
    /**
     * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
     */
    int getColorFieldCount();
    /**
     * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
     */
    io.protoless.tests.samples.Schemas.Color getColorField(int index);
    /**
     * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
     */
    java.util.List<java.lang.Integer>
    getColorFieldValueList();
    /**
     * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
     */
    int getColorFieldValue(int index);
  }
  /**
   * Protobuf type {@code io.protoless.tests.samples.Repeated}
   */
  public  static final class Repeated extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.protoless.tests.samples.Repeated)
      RepeatedOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Repeated.newBuilder() to construct.
    private Repeated(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Repeated() {
      doubleField_ = java.util.Collections.emptyList();
      floatField_ = java.util.Collections.emptyList();
      int32Field_ = java.util.Collections.emptyList();
      int64Field_ = java.util.Collections.emptyList();
      uint32Field_ = java.util.Collections.emptyList();
      uint64Field_ = java.util.Collections.emptyList();
      sint32Field_ = java.util.Collections.emptyList();
      sint64Field_ = java.util.Collections.emptyList();
      fixed32Field_ = java.util.Collections.emptyList();
      fixed64Field_ = java.util.Collections.emptyList();
      sfixed32Field_ = java.util.Collections.emptyList();
      sfixed64Field_ = java.util.Collections.emptyList();
      boolField_ = java.util.Collections.emptyList();
      stringField_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bytesField_ = java.util.Collections.emptyList();
      colorField_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Repeated(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                doubleField_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              doubleField_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                doubleField_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                doubleField_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                floatField_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              floatField_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                floatField_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                floatField_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                int32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              int32Field_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                int32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                int32Field_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                int64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              int64Field_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                int64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                int64Field_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                uint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              uint32Field_.add(input.readUInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                uint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                uint32Field_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                uint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              uint64Field_.add(input.readUInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                uint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                uint64Field_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                sint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              sint32Field_.add(input.readSInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                sint32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                sint32Field_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                sint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              sint64Field_.add(input.readSInt64());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                sint64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                sint64Field_.add(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 77: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                fixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              fixed32Field_.add(input.readFixed32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                fixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixed32Field_.add(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 81: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                fixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              fixed64Field_.add(input.readFixed64());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                fixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                fixed64Field_.add(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 93: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                sfixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              sfixed32Field_.add(input.readSFixed32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                sfixed32Field_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                sfixed32Field_.add(input.readSFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 97: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                sfixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              sfixed64Field_.add(input.readSFixed64());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                sfixed64Field_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                sfixed64Field_.add(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                boolField_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00001000;
              }
              boolField_.add(input.readBool());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                boolField_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                boolField_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                stringField_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00002000;
              }
              stringField_.add(s);
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                bytesField_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00004000;
              }
              bytesField_.add(input.readBytes());
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                colorField_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              colorField_.add(rawValue);
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                  colorField_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00008000;
                }
                colorField_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          doubleField_ = java.util.Collections.unmodifiableList(doubleField_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          floatField_ = java.util.Collections.unmodifiableList(floatField_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          int32Field_ = java.util.Collections.unmodifiableList(int32Field_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          int64Field_ = java.util.Collections.unmodifiableList(int64Field_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          uint32Field_ = java.util.Collections.unmodifiableList(uint32Field_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          uint64Field_ = java.util.Collections.unmodifiableList(uint64Field_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          sint32Field_ = java.util.Collections.unmodifiableList(sint32Field_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          sint64Field_ = java.util.Collections.unmodifiableList(sint64Field_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32Field_ = java.util.Collections.unmodifiableList(fixed32Field_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64Field_ = java.util.Collections.unmodifiableList(fixed64Field_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32Field_ = java.util.Collections.unmodifiableList(sfixed32Field_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64Field_ = java.util.Collections.unmodifiableList(sfixed64Field_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          boolField_ = java.util.Collections.unmodifiableList(boolField_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          stringField_ = stringField_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          bytesField_ = java.util.Collections.unmodifiableList(bytesField_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          colorField_ = java.util.Collections.unmodifiableList(colorField_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Repeated_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Repeated_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.protoless.tests.samples.Schemas.Repeated.class, io.protoless.tests.samples.Schemas.Repeated.Builder.class);
    }

    public static final int DOUBLE_FIELD_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> doubleField_;
    /**
     * <code>repeated double double_field = 1;</code>
     */
    public java.util.List<java.lang.Double>
        getDoubleFieldList() {
      return doubleField_;
    }
    /**
     * <code>repeated double double_field = 1;</code>
     */
    public int getDoubleFieldCount() {
      return doubleField_.size();
    }
    /**
     * <code>repeated double double_field = 1;</code>
     */
    public double getDoubleField(int index) {
      return doubleField_.get(index);
    }
    private int doubleFieldMemoizedSerializedSize = -1;

    public static final int FLOAT_FIELD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> floatField_;
    /**
     * <code>repeated float float_field = 2;</code>
     */
    public java.util.List<java.lang.Float>
        getFloatFieldList() {
      return floatField_;
    }
    /**
     * <code>repeated float float_field = 2;</code>
     */
    public int getFloatFieldCount() {
      return floatField_.size();
    }
    /**
     * <code>repeated float float_field = 2;</code>
     */
    public float getFloatField(int index) {
      return floatField_.get(index);
    }
    private int floatFieldMemoizedSerializedSize = -1;

    public static final int INT32_FIELD_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> int32Field_;
    /**
     * <code>repeated int32 int32_field = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getInt32FieldList() {
      return int32Field_;
    }
    /**
     * <code>repeated int32 int32_field = 3;</code>
     */
    public int getInt32FieldCount() {
      return int32Field_.size();
    }
    /**
     * <code>repeated int32 int32_field = 3;</code>
     */
    public int getInt32Field(int index) {
      return int32Field_.get(index);
    }
    private int int32FieldMemoizedSerializedSize = -1;

    public static final int INT64_FIELD_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> int64Field_;
    /**
     * <code>repeated int64 int64_field = 4;</code>
     */
    public java.util.List<java.lang.Long>
        getInt64FieldList() {
      return int64Field_;
    }
    /**
     * <code>repeated int64 int64_field = 4;</code>
     */
    public int getInt64FieldCount() {
      return int64Field_.size();
    }
    /**
     * <code>repeated int64 int64_field = 4;</code>
     */
    public long getInt64Field(int index) {
      return int64Field_.get(index);
    }
    private int int64FieldMemoizedSerializedSize = -1;

    public static final int UINT32_FIELD_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> uint32Field_;
    /**
     * <code>repeated uint32 uint32_field = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getUint32FieldList() {
      return uint32Field_;
    }
    /**
     * <code>repeated uint32 uint32_field = 5;</code>
     */
    public int getUint32FieldCount() {
      return uint32Field_.size();
    }
    /**
     * <code>repeated uint32 uint32_field = 5;</code>
     */
    public int getUint32Field(int index) {
      return uint32Field_.get(index);
    }
    private int uint32FieldMemoizedSerializedSize = -1;

    public static final int UINT64_FIELD_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Long> uint64Field_;
    /**
     * <code>repeated uint64 uint64_field = 6;</code>
     */
    public java.util.List<java.lang.Long>
        getUint64FieldList() {
      return uint64Field_;
    }
    /**
     * <code>repeated uint64 uint64_field = 6;</code>
     */
    public int getUint64FieldCount() {
      return uint64Field_.size();
    }
    /**
     * <code>repeated uint64 uint64_field = 6;</code>
     */
    public long getUint64Field(int index) {
      return uint64Field_.get(index);
    }
    private int uint64FieldMemoizedSerializedSize = -1;

    public static final int SINT32_FIELD_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> sint32Field_;
    /**
     * <code>repeated sint32 sint32_field = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getSint32FieldList() {
      return sint32Field_;
    }
    /**
     * <code>repeated sint32 sint32_field = 7;</code>
     */
    public int getSint32FieldCount() {
      return sint32Field_.size();
    }
    /**
     * <code>repeated sint32 sint32_field = 7;</code>
     */
    public int getSint32Field(int index) {
      return sint32Field_.get(index);
    }
    private int sint32FieldMemoizedSerializedSize = -1;

    public static final int SINT64_FIELD_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Long> sint64Field_;
    /**
     * <code>repeated sint64 sint64_field = 8;</code>
     */
    public java.util.List<java.lang.Long>
        getSint64FieldList() {
      return sint64Field_;
    }
    /**
     * <code>repeated sint64 sint64_field = 8;</code>
     */
    public int getSint64FieldCount() {
      return sint64Field_.size();
    }
    /**
     * <code>repeated sint64 sint64_field = 8;</code>
     */
    public long getSint64Field(int index) {
      return sint64Field_.get(index);
    }
    private int sint64FieldMemoizedSerializedSize = -1;

    public static final int FIXED32_FIELD_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> fixed32Field_;
    /**
     * <code>repeated fixed32 fixed32_field = 9;</code>
     */
    public java.util.List<java.lang.Integer>
        getFixed32FieldList() {
      return fixed32Field_;
    }
    /**
     * <code>repeated fixed32 fixed32_field = 9;</code>
     */
    public int getFixed32FieldCount() {
      return fixed32Field_.size();
    }
    /**
     * <code>repeated fixed32 fixed32_field = 9;</code>
     */
    public int getFixed32Field(int index) {
      return fixed32Field_.get(index);
    }
    private int fixed32FieldMemoizedSerializedSize = -1;

    public static final int FIXED64_FIELD_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Long> fixed64Field_;
    /**
     * <code>repeated fixed64 fixed64_field = 10;</code>
     */
    public java.util.List<java.lang.Long>
        getFixed64FieldList() {
      return fixed64Field_;
    }
    /**
     * <code>repeated fixed64 fixed64_field = 10;</code>
     */
    public int getFixed64FieldCount() {
      return fixed64Field_.size();
    }
    /**
     * <code>repeated fixed64 fixed64_field = 10;</code>
     */
    public long getFixed64Field(int index) {
      return fixed64Field_.get(index);
    }
    private int fixed64FieldMemoizedSerializedSize = -1;

    public static final int SFIXED32_FIELD_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> sfixed32Field_;
    /**
     * <code>repeated sfixed32 sfixed32_field = 11;</code>
     */
    public java.util.List<java.lang.Integer>
        getSfixed32FieldList() {
      return sfixed32Field_;
    }
    /**
     * <code>repeated sfixed32 sfixed32_field = 11;</code>
     */
    public int getSfixed32FieldCount() {
      return sfixed32Field_.size();
    }
    /**
     * <code>repeated sfixed32 sfixed32_field = 11;</code>
     */
    public int getSfixed32Field(int index) {
      return sfixed32Field_.get(index);
    }
    private int sfixed32FieldMemoizedSerializedSize = -1;

    public static final int SFIXED64_FIELD_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Long> sfixed64Field_;
    /**
     * <code>repeated sfixed64 sfixed64_field = 12;</code>
     */
    public java.util.List<java.lang.Long>
        getSfixed64FieldList() {
      return sfixed64Field_;
    }
    /**
     * <code>repeated sfixed64 sfixed64_field = 12;</code>
     */
    public int getSfixed64FieldCount() {
      return sfixed64Field_.size();
    }
    /**
     * <code>repeated sfixed64 sfixed64_field = 12;</code>
     */
    public long getSfixed64Field(int index) {
      return sfixed64Field_.get(index);
    }
    private int sfixed64FieldMemoizedSerializedSize = -1;

    public static final int BOOL_FIELD_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Boolean> boolField_;
    /**
     * <code>repeated bool bool_field = 13;</code>
     */
    public java.util.List<java.lang.Boolean>
        getBoolFieldList() {
      return boolField_;
    }
    /**
     * <code>repeated bool bool_field = 13;</code>
     */
    public int getBoolFieldCount() {
      return boolField_.size();
    }
    /**
     * <code>repeated bool bool_field = 13;</code>
     */
    public boolean getBoolField(int index) {
      return boolField_.get(index);
    }
    private int boolFieldMemoizedSerializedSize = -1;

    public static final int STRING_FIELD_FIELD_NUMBER = 14;
    private com.google.protobuf.LazyStringList stringField_;
    /**
     * <code>repeated string string_field = 14;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getStringFieldList() {
      return stringField_;
    }
    /**
     * <code>repeated string string_field = 14;</code>
     */
    public int getStringFieldCount() {
      return stringField_.size();
    }
    /**
     * <code>repeated string string_field = 14;</code>
     */
    public java.lang.String getStringField(int index) {
      return stringField_.get(index);
    }
    /**
     * <code>repeated string string_field = 14;</code>
     */
    public com.google.protobuf.ByteString
        getStringFieldBytes(int index) {
      return stringField_.getByteString(index);
    }

    public static final int BYTES_FIELD_FIELD_NUMBER = 15;
    private java.util.List<com.google.protobuf.ByteString> bytesField_;
    /**
     * <code>repeated bytes bytes_field = 15;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getBytesFieldList() {
      return bytesField_;
    }
    /**
     * <code>repeated bytes bytes_field = 15;</code>
     */
    public int getBytesFieldCount() {
      return bytesField_.size();
    }
    /**
     * <code>repeated bytes bytes_field = 15;</code>
     */
    public com.google.protobuf.ByteString getBytesField(int index) {
      return bytesField_.get(index);
    }

    public static final int COLOR_FIELD_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> colorField_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, io.protoless.tests.samples.Schemas.Color> colorField_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, io.protoless.tests.samples.Schemas.Color>() {
              public io.protoless.tests.samples.Schemas.Color convert(java.lang.Integer from) {
                io.protoless.tests.samples.Schemas.Color result = io.protoless.tests.samples.Schemas.Color.valueOf(from);
                return result == null ? io.protoless.tests.samples.Schemas.Color.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
     */
    public java.util.List<io.protoless.tests.samples.Schemas.Color> getColorFieldList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.protoless.tests.samples.Schemas.Color>(colorField_, colorField_converter_);
    }
    /**
     * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
     */
    public int getColorFieldCount() {
      return colorField_.size();
    }
    /**
     * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
     */
    public io.protoless.tests.samples.Schemas.Color getColorField(int index) {
      return colorField_converter_.convert(colorField_.get(index));
    }
    /**
     * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
     */
    public java.util.List<java.lang.Integer>
    getColorFieldValueList() {
      return colorField_;
    }
    /**
     * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
     */
    public int getColorFieldValue(int index) {
      return colorField_.get(index);
    }
    private int colorFieldMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDoubleFieldList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(doubleFieldMemoizedSerializedSize);
      }
      for (int i = 0; i < doubleField_.size(); i++) {
        output.writeDoubleNoTag(doubleField_.get(i));
      }
      if (getFloatFieldList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(floatFieldMemoizedSerializedSize);
      }
      for (int i = 0; i < floatField_.size(); i++) {
        output.writeFloatNoTag(floatField_.get(i));
      }
      if (getInt32FieldList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(int32FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < int32Field_.size(); i++) {
        output.writeInt32NoTag(int32Field_.get(i));
      }
      if (getInt64FieldList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(int64FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < int64Field_.size(); i++) {
        output.writeInt64NoTag(int64Field_.get(i));
      }
      if (getUint32FieldList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(uint32FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < uint32Field_.size(); i++) {
        output.writeUInt32NoTag(uint32Field_.get(i));
      }
      if (getUint64FieldList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(uint64FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < uint64Field_.size(); i++) {
        output.writeUInt64NoTag(uint64Field_.get(i));
      }
      if (getSint32FieldList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(sint32FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < sint32Field_.size(); i++) {
        output.writeSInt32NoTag(sint32Field_.get(i));
      }
      if (getSint64FieldList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(sint64FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < sint64Field_.size(); i++) {
        output.writeSInt64NoTag(sint64Field_.get(i));
      }
      if (getFixed32FieldList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(fixed32FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < fixed32Field_.size(); i++) {
        output.writeFixed32NoTag(fixed32Field_.get(i));
      }
      if (getFixed64FieldList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(fixed64FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < fixed64Field_.size(); i++) {
        output.writeFixed64NoTag(fixed64Field_.get(i));
      }
      if (getSfixed32FieldList().size() > 0) {
        output.writeUInt32NoTag(90);
        output.writeUInt32NoTag(sfixed32FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < sfixed32Field_.size(); i++) {
        output.writeSFixed32NoTag(sfixed32Field_.get(i));
      }
      if (getSfixed64FieldList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(sfixed64FieldMemoizedSerializedSize);
      }
      for (int i = 0; i < sfixed64Field_.size(); i++) {
        output.writeSFixed64NoTag(sfixed64Field_.get(i));
      }
      if (getBoolFieldList().size() > 0) {
        output.writeUInt32NoTag(106);
        output.writeUInt32NoTag(boolFieldMemoizedSerializedSize);
      }
      for (int i = 0; i < boolField_.size(); i++) {
        output.writeBoolNoTag(boolField_.get(i));
      }
      for (int i = 0; i < stringField_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, stringField_.getRaw(i));
      }
      for (int i = 0; i < bytesField_.size(); i++) {
        output.writeBytes(15, bytesField_.get(i));
      }
      if (getColorFieldList().size() > 0) {
        output.writeUInt32NoTag(130);
        output.writeUInt32NoTag(colorFieldMemoizedSerializedSize);
      }
      for (int i = 0; i < colorField_.size(); i++) {
        output.writeEnumNoTag(colorField_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleFieldList().size();
        size += dataSize;
        if (!getDoubleFieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        doubleFieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatFieldList().size();
        size += dataSize;
        if (!getFloatFieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        floatFieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int32Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(int32Field_.get(i));
        }
        size += dataSize;
        if (!getInt32FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        int32FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int64Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(int64Field_.get(i));
        }
        size += dataSize;
        if (!getInt64FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        int64FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint32Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(uint32Field_.get(i));
        }
        size += dataSize;
        if (!getUint32FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        uint32FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint64Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(uint64Field_.get(i));
        }
        size += dataSize;
        if (!getUint64FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        uint64FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint32Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(sint32Field_.get(i));
        }
        size += dataSize;
        if (!getSint32FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sint32FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint64Field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(sint64Field_.get(i));
        }
        size += dataSize;
        if (!getSint64FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sint64FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFixed32FieldList().size();
        size += dataSize;
        if (!getFixed32FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        fixed32FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getFixed64FieldList().size();
        size += dataSize;
        if (!getFixed64FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        fixed64FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getSfixed32FieldList().size();
        size += dataSize;
        if (!getSfixed32FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sfixed32FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getSfixed64FieldList().size();
        size += dataSize;
        if (!getSfixed64FieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sfixed64FieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 1 * getBoolFieldList().size();
        size += dataSize;
        if (!getBoolFieldList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        boolFieldMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stringField_.size(); i++) {
          dataSize += computeStringSizeNoTag(stringField_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getStringFieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bytesField_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(bytesField_.get(i));
        }
        size += dataSize;
        size += 1 * getBytesFieldList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < colorField_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(colorField_.get(i));
        }
        size += dataSize;
        if (!getColorFieldList().isEmpty()) {  size += 2;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }colorFieldMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.protoless.tests.samples.Schemas.Repeated)) {
        return super.equals(obj);
      }
      io.protoless.tests.samples.Schemas.Repeated other = (io.protoless.tests.samples.Schemas.Repeated) obj;

      boolean result = true;
      result = result && getDoubleFieldList()
          .equals(other.getDoubleFieldList());
      result = result && getFloatFieldList()
          .equals(other.getFloatFieldList());
      result = result && getInt32FieldList()
          .equals(other.getInt32FieldList());
      result = result && getInt64FieldList()
          .equals(other.getInt64FieldList());
      result = result && getUint32FieldList()
          .equals(other.getUint32FieldList());
      result = result && getUint64FieldList()
          .equals(other.getUint64FieldList());
      result = result && getSint32FieldList()
          .equals(other.getSint32FieldList());
      result = result && getSint64FieldList()
          .equals(other.getSint64FieldList());
      result = result && getFixed32FieldList()
          .equals(other.getFixed32FieldList());
      result = result && getFixed64FieldList()
          .equals(other.getFixed64FieldList());
      result = result && getSfixed32FieldList()
          .equals(other.getSfixed32FieldList());
      result = result && getSfixed64FieldList()
          .equals(other.getSfixed64FieldList());
      result = result && getBoolFieldList()
          .equals(other.getBoolFieldList());
      result = result && getStringFieldList()
          .equals(other.getStringFieldList());
      result = result && getBytesFieldList()
          .equals(other.getBytesFieldList());
      result = result && colorField_.equals(other.colorField_);
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDoubleFieldCount() > 0) {
        hash = (37 * hash) + DOUBLE_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getDoubleFieldList().hashCode();
      }
      if (getFloatFieldCount() > 0) {
        hash = (37 * hash) + FLOAT_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getFloatFieldList().hashCode();
      }
      if (getInt32FieldCount() > 0) {
        hash = (37 * hash) + INT32_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getInt32FieldList().hashCode();
      }
      if (getInt64FieldCount() > 0) {
        hash = (37 * hash) + INT64_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getInt64FieldList().hashCode();
      }
      if (getUint32FieldCount() > 0) {
        hash = (37 * hash) + UINT32_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getUint32FieldList().hashCode();
      }
      if (getUint64FieldCount() > 0) {
        hash = (37 * hash) + UINT64_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getUint64FieldList().hashCode();
      }
      if (getSint32FieldCount() > 0) {
        hash = (37 * hash) + SINT32_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getSint32FieldList().hashCode();
      }
      if (getSint64FieldCount() > 0) {
        hash = (37 * hash) + SINT64_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getSint64FieldList().hashCode();
      }
      if (getFixed32FieldCount() > 0) {
        hash = (37 * hash) + FIXED32_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getFixed32FieldList().hashCode();
      }
      if (getFixed64FieldCount() > 0) {
        hash = (37 * hash) + FIXED64_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getFixed64FieldList().hashCode();
      }
      if (getSfixed32FieldCount() > 0) {
        hash = (37 * hash) + SFIXED32_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getSfixed32FieldList().hashCode();
      }
      if (getSfixed64FieldCount() > 0) {
        hash = (37 * hash) + SFIXED64_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getSfixed64FieldList().hashCode();
      }
      if (getBoolFieldCount() > 0) {
        hash = (37 * hash) + BOOL_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getBoolFieldList().hashCode();
      }
      if (getStringFieldCount() > 0) {
        hash = (37 * hash) + STRING_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getStringFieldList().hashCode();
      }
      if (getBytesFieldCount() > 0) {
        hash = (37 * hash) + BYTES_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getBytesFieldList().hashCode();
      }
      if (getColorFieldCount() > 0) {
        hash = (37 * hash) + COLOR_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + colorField_.hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.protoless.tests.samples.Schemas.Repeated parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.Repeated parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Repeated parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.Repeated parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Repeated parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.Repeated parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Repeated parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.Repeated parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Repeated parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.Repeated parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Repeated parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.Repeated parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.protoless.tests.samples.Schemas.Repeated prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.protoless.tests.samples.Repeated}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.protoless.tests.samples.Repeated)
        io.protoless.tests.samples.Schemas.RepeatedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Repeated_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Repeated_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.protoless.tests.samples.Schemas.Repeated.class, io.protoless.tests.samples.Schemas.Repeated.Builder.class);
      }

      // Construct using io.protoless.tests.samples.Schemas.Repeated.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        doubleField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        floatField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        int32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        int64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        uint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        sint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        sint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        fixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        sfixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        boolField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        stringField_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00002000);
        bytesField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        colorField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Repeated_descriptor;
      }

      public io.protoless.tests.samples.Schemas.Repeated getDefaultInstanceForType() {
        return io.protoless.tests.samples.Schemas.Repeated.getDefaultInstance();
      }

      public io.protoless.tests.samples.Schemas.Repeated build() {
        io.protoless.tests.samples.Schemas.Repeated result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.protoless.tests.samples.Schemas.Repeated buildPartial() {
        io.protoless.tests.samples.Schemas.Repeated result = new io.protoless.tests.samples.Schemas.Repeated(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          doubleField_ = java.util.Collections.unmodifiableList(doubleField_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.doubleField_ = doubleField_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          floatField_ = java.util.Collections.unmodifiableList(floatField_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.floatField_ = floatField_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          int32Field_ = java.util.Collections.unmodifiableList(int32Field_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.int32Field_ = int32Field_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          int64Field_ = java.util.Collections.unmodifiableList(int64Field_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.int64Field_ = int64Field_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          uint32Field_ = java.util.Collections.unmodifiableList(uint32Field_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.uint32Field_ = uint32Field_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          uint64Field_ = java.util.Collections.unmodifiableList(uint64Field_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.uint64Field_ = uint64Field_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          sint32Field_ = java.util.Collections.unmodifiableList(sint32Field_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.sint32Field_ = sint32Field_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          sint64Field_ = java.util.Collections.unmodifiableList(sint64Field_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.sint64Field_ = sint64Field_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32Field_ = java.util.Collections.unmodifiableList(fixed32Field_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.fixed32Field_ = fixed32Field_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64Field_ = java.util.Collections.unmodifiableList(fixed64Field_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.fixed64Field_ = fixed64Field_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32Field_ = java.util.Collections.unmodifiableList(sfixed32Field_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.sfixed32Field_ = sfixed32Field_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64Field_ = java.util.Collections.unmodifiableList(sfixed64Field_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.sfixed64Field_ = sfixed64Field_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          boolField_ = java.util.Collections.unmodifiableList(boolField_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.boolField_ = boolField_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          stringField_ = stringField_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.stringField_ = stringField_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          bytesField_ = java.util.Collections.unmodifiableList(bytesField_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.bytesField_ = bytesField_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          colorField_ = java.util.Collections.unmodifiableList(colorField_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.colorField_ = colorField_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.protoless.tests.samples.Schemas.Repeated) {
          return mergeFrom((io.protoless.tests.samples.Schemas.Repeated)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.protoless.tests.samples.Schemas.Repeated other) {
        if (other == io.protoless.tests.samples.Schemas.Repeated.getDefaultInstance()) return this;
        if (!other.doubleField_.isEmpty()) {
          if (doubleField_.isEmpty()) {
            doubleField_ = other.doubleField_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDoubleFieldIsMutable();
            doubleField_.addAll(other.doubleField_);
          }
          onChanged();
        }
        if (!other.floatField_.isEmpty()) {
          if (floatField_.isEmpty()) {
            floatField_ = other.floatField_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFloatFieldIsMutable();
            floatField_.addAll(other.floatField_);
          }
          onChanged();
        }
        if (!other.int32Field_.isEmpty()) {
          if (int32Field_.isEmpty()) {
            int32Field_ = other.int32Field_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureInt32FieldIsMutable();
            int32Field_.addAll(other.int32Field_);
          }
          onChanged();
        }
        if (!other.int64Field_.isEmpty()) {
          if (int64Field_.isEmpty()) {
            int64Field_ = other.int64Field_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureInt64FieldIsMutable();
            int64Field_.addAll(other.int64Field_);
          }
          onChanged();
        }
        if (!other.uint32Field_.isEmpty()) {
          if (uint32Field_.isEmpty()) {
            uint32Field_ = other.uint32Field_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureUint32FieldIsMutable();
            uint32Field_.addAll(other.uint32Field_);
          }
          onChanged();
        }
        if (!other.uint64Field_.isEmpty()) {
          if (uint64Field_.isEmpty()) {
            uint64Field_ = other.uint64Field_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureUint64FieldIsMutable();
            uint64Field_.addAll(other.uint64Field_);
          }
          onChanged();
        }
        if (!other.sint32Field_.isEmpty()) {
          if (sint32Field_.isEmpty()) {
            sint32Field_ = other.sint32Field_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureSint32FieldIsMutable();
            sint32Field_.addAll(other.sint32Field_);
          }
          onChanged();
        }
        if (!other.sint64Field_.isEmpty()) {
          if (sint64Field_.isEmpty()) {
            sint64Field_ = other.sint64Field_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureSint64FieldIsMutable();
            sint64Field_.addAll(other.sint64Field_);
          }
          onChanged();
        }
        if (!other.fixed32Field_.isEmpty()) {
          if (fixed32Field_.isEmpty()) {
            fixed32Field_ = other.fixed32Field_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureFixed32FieldIsMutable();
            fixed32Field_.addAll(other.fixed32Field_);
          }
          onChanged();
        }
        if (!other.fixed64Field_.isEmpty()) {
          if (fixed64Field_.isEmpty()) {
            fixed64Field_ = other.fixed64Field_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureFixed64FieldIsMutable();
            fixed64Field_.addAll(other.fixed64Field_);
          }
          onChanged();
        }
        if (!other.sfixed32Field_.isEmpty()) {
          if (sfixed32Field_.isEmpty()) {
            sfixed32Field_ = other.sfixed32Field_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureSfixed32FieldIsMutable();
            sfixed32Field_.addAll(other.sfixed32Field_);
          }
          onChanged();
        }
        if (!other.sfixed64Field_.isEmpty()) {
          if (sfixed64Field_.isEmpty()) {
            sfixed64Field_ = other.sfixed64Field_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureSfixed64FieldIsMutable();
            sfixed64Field_.addAll(other.sfixed64Field_);
          }
          onChanged();
        }
        if (!other.boolField_.isEmpty()) {
          if (boolField_.isEmpty()) {
            boolField_ = other.boolField_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureBoolFieldIsMutable();
            boolField_.addAll(other.boolField_);
          }
          onChanged();
        }
        if (!other.stringField_.isEmpty()) {
          if (stringField_.isEmpty()) {
            stringField_ = other.stringField_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureStringFieldIsMutable();
            stringField_.addAll(other.stringField_);
          }
          onChanged();
        }
        if (!other.bytesField_.isEmpty()) {
          if (bytesField_.isEmpty()) {
            bytesField_ = other.bytesField_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureBytesFieldIsMutable();
            bytesField_.addAll(other.bytesField_);
          }
          onChanged();
        }
        if (!other.colorField_.isEmpty()) {
          if (colorField_.isEmpty()) {
            colorField_ = other.colorField_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureColorFieldIsMutable();
            colorField_.addAll(other.colorField_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.protoless.tests.samples.Schemas.Repeated parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.protoless.tests.samples.Schemas.Repeated) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> doubleField_ = java.util.Collections.emptyList();
      private void ensureDoubleFieldIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          doubleField_ = new java.util.ArrayList<java.lang.Double>(doubleField_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public java.util.List<java.lang.Double>
          getDoubleFieldList() {
        return java.util.Collections.unmodifiableList(doubleField_);
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public int getDoubleFieldCount() {
        return doubleField_.size();
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public double getDoubleField(int index) {
        return doubleField_.get(index);
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public Builder setDoubleField(
          int index, double value) {
        ensureDoubleFieldIsMutable();
        doubleField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public Builder addDoubleField(double value) {
        ensureDoubleFieldIsMutable();
        doubleField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public Builder addAllDoubleField(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDoubleFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, doubleField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double double_field = 1;</code>
       */
      public Builder clearDoubleField() {
        doubleField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> floatField_ = java.util.Collections.emptyList();
      private void ensureFloatFieldIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          floatField_ = new java.util.ArrayList<java.lang.Float>(floatField_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public java.util.List<java.lang.Float>
          getFloatFieldList() {
        return java.util.Collections.unmodifiableList(floatField_);
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public int getFloatFieldCount() {
        return floatField_.size();
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public float getFloatField(int index) {
        return floatField_.get(index);
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public Builder setFloatField(
          int index, float value) {
        ensureFloatFieldIsMutable();
        floatField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public Builder addFloatField(float value) {
        ensureFloatFieldIsMutable();
        floatField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public Builder addAllFloatField(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floatField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_field = 2;</code>
       */
      public Builder clearFloatField() {
        floatField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> int32Field_ = java.util.Collections.emptyList();
      private void ensureInt32FieldIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          int32Field_ = new java.util.ArrayList<java.lang.Integer>(int32Field_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getInt32FieldList() {
        return java.util.Collections.unmodifiableList(int32Field_);
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public int getInt32FieldCount() {
        return int32Field_.size();
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public int getInt32Field(int index) {
        return int32Field_.get(index);
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public Builder setInt32Field(
          int index, int value) {
        ensureInt32FieldIsMutable();
        int32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public Builder addInt32Field(int value) {
        ensureInt32FieldIsMutable();
        int32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public Builder addAllInt32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInt32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int32_field = 3;</code>
       */
      public Builder clearInt32Field() {
        int32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> int64Field_ = java.util.Collections.emptyList();
      private void ensureInt64FieldIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          int64Field_ = new java.util.ArrayList<java.lang.Long>(int64Field_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public java.util.List<java.lang.Long>
          getInt64FieldList() {
        return java.util.Collections.unmodifiableList(int64Field_);
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public int getInt64FieldCount() {
        return int64Field_.size();
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public long getInt64Field(int index) {
        return int64Field_.get(index);
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public Builder setInt64Field(
          int index, long value) {
        ensureInt64FieldIsMutable();
        int64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public Builder addInt64Field(long value) {
        ensureInt64FieldIsMutable();
        int64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public Builder addAllInt64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInt64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_field = 4;</code>
       */
      public Builder clearInt64Field() {
        int64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> uint32Field_ = java.util.Collections.emptyList();
      private void ensureUint32FieldIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          uint32Field_ = new java.util.ArrayList<java.lang.Integer>(uint32Field_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getUint32FieldList() {
        return java.util.Collections.unmodifiableList(uint32Field_);
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public int getUint32FieldCount() {
        return uint32Field_.size();
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public int getUint32Field(int index) {
        return uint32Field_.get(index);
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public Builder setUint32Field(
          int index, int value) {
        ensureUint32FieldIsMutable();
        uint32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public Builder addUint32Field(int value) {
        ensureUint32FieldIsMutable();
        uint32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public Builder addAllUint32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUint32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uint32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 uint32_field = 5;</code>
       */
      public Builder clearUint32Field() {
        uint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> uint64Field_ = java.util.Collections.emptyList();
      private void ensureUint64FieldIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          uint64Field_ = new java.util.ArrayList<java.lang.Long>(uint64Field_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public java.util.List<java.lang.Long>
          getUint64FieldList() {
        return java.util.Collections.unmodifiableList(uint64Field_);
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public int getUint64FieldCount() {
        return uint64Field_.size();
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public long getUint64Field(int index) {
        return uint64Field_.get(index);
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public Builder setUint64Field(
          int index, long value) {
        ensureUint64FieldIsMutable();
        uint64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public Builder addUint64Field(long value) {
        ensureUint64FieldIsMutable();
        uint64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public Builder addAllUint64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUint64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uint64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 uint64_field = 6;</code>
       */
      public Builder clearUint64Field() {
        uint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> sint32Field_ = java.util.Collections.emptyList();
      private void ensureSint32FieldIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          sint32Field_ = new java.util.ArrayList<java.lang.Integer>(sint32Field_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getSint32FieldList() {
        return java.util.Collections.unmodifiableList(sint32Field_);
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public int getSint32FieldCount() {
        return sint32Field_.size();
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public int getSint32Field(int index) {
        return sint32Field_.get(index);
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public Builder setSint32Field(
          int index, int value) {
        ensureSint32FieldIsMutable();
        sint32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public Builder addSint32Field(int value) {
        ensureSint32FieldIsMutable();
        sint32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public Builder addAllSint32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSint32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sint32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 sint32_field = 7;</code>
       */
      public Builder clearSint32Field() {
        sint32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> sint64Field_ = java.util.Collections.emptyList();
      private void ensureSint64FieldIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          sint64Field_ = new java.util.ArrayList<java.lang.Long>(sint64Field_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public java.util.List<java.lang.Long>
          getSint64FieldList() {
        return java.util.Collections.unmodifiableList(sint64Field_);
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public int getSint64FieldCount() {
        return sint64Field_.size();
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public long getSint64Field(int index) {
        return sint64Field_.get(index);
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public Builder setSint64Field(
          int index, long value) {
        ensureSint64FieldIsMutable();
        sint64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public Builder addSint64Field(long value) {
        ensureSint64FieldIsMutable();
        sint64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public Builder addAllSint64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSint64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sint64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 sint64_field = 8;</code>
       */
      public Builder clearSint64Field() {
        sint64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> fixed32Field_ = java.util.Collections.emptyList();
      private void ensureFixed32FieldIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32Field_ = new java.util.ArrayList<java.lang.Integer>(fixed32Field_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public java.util.List<java.lang.Integer>
          getFixed32FieldList() {
        return java.util.Collections.unmodifiableList(fixed32Field_);
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public int getFixed32FieldCount() {
        return fixed32Field_.size();
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public int getFixed32Field(int index) {
        return fixed32Field_.get(index);
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public Builder setFixed32Field(
          int index, int value) {
        ensureFixed32FieldIsMutable();
        fixed32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public Builder addFixed32Field(int value) {
        ensureFixed32FieldIsMutable();
        fixed32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public Builder addAllFixed32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFixed32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fixed32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 fixed32_field = 9;</code>
       */
      public Builder clearFixed32Field() {
        fixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> fixed64Field_ = java.util.Collections.emptyList();
      private void ensureFixed64FieldIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64Field_ = new java.util.ArrayList<java.lang.Long>(fixed64Field_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public java.util.List<java.lang.Long>
          getFixed64FieldList() {
        return java.util.Collections.unmodifiableList(fixed64Field_);
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public int getFixed64FieldCount() {
        return fixed64Field_.size();
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public long getFixed64Field(int index) {
        return fixed64Field_.get(index);
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public Builder setFixed64Field(
          int index, long value) {
        ensureFixed64FieldIsMutable();
        fixed64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public Builder addFixed64Field(long value) {
        ensureFixed64FieldIsMutable();
        fixed64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public Builder addAllFixed64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFixed64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fixed64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 fixed64_field = 10;</code>
       */
      public Builder clearFixed64Field() {
        fixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> sfixed32Field_ = java.util.Collections.emptyList();
      private void ensureSfixed32FieldIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32Field_ = new java.util.ArrayList<java.lang.Integer>(sfixed32Field_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public java.util.List<java.lang.Integer>
          getSfixed32FieldList() {
        return java.util.Collections.unmodifiableList(sfixed32Field_);
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public int getSfixed32FieldCount() {
        return sfixed32Field_.size();
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public int getSfixed32Field(int index) {
        return sfixed32Field_.get(index);
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public Builder setSfixed32Field(
          int index, int value) {
        ensureSfixed32FieldIsMutable();
        sfixed32Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public Builder addSfixed32Field(int value) {
        ensureSfixed32FieldIsMutable();
        sfixed32Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public Builder addAllSfixed32Field(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSfixed32FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sfixed32Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed32 sfixed32_field = 11;</code>
       */
      public Builder clearSfixed32Field() {
        sfixed32Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> sfixed64Field_ = java.util.Collections.emptyList();
      private void ensureSfixed64FieldIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64Field_ = new java.util.ArrayList<java.lang.Long>(sfixed64Field_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public java.util.List<java.lang.Long>
          getSfixed64FieldList() {
        return java.util.Collections.unmodifiableList(sfixed64Field_);
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public int getSfixed64FieldCount() {
        return sfixed64Field_.size();
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public long getSfixed64Field(int index) {
        return sfixed64Field_.get(index);
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public Builder setSfixed64Field(
          int index, long value) {
        ensureSfixed64FieldIsMutable();
        sfixed64Field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public Builder addSfixed64Field(long value) {
        ensureSfixed64FieldIsMutable();
        sfixed64Field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public Builder addAllSfixed64Field(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSfixed64FieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sfixed64Field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 sfixed64_field = 12;</code>
       */
      public Builder clearSfixed64Field() {
        sfixed64Field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Boolean> boolField_ = java.util.Collections.emptyList();
      private void ensureBoolFieldIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          boolField_ = new java.util.ArrayList<java.lang.Boolean>(boolField_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public java.util.List<java.lang.Boolean>
          getBoolFieldList() {
        return java.util.Collections.unmodifiableList(boolField_);
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public int getBoolFieldCount() {
        return boolField_.size();
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public boolean getBoolField(int index) {
        return boolField_.get(index);
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public Builder setBoolField(
          int index, boolean value) {
        ensureBoolFieldIsMutable();
        boolField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public Builder addBoolField(boolean value) {
        ensureBoolFieldIsMutable();
        boolField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public Builder addAllBoolField(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureBoolFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, boolField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bool_field = 13;</code>
       */
      public Builder clearBoolField() {
        boolField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList stringField_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStringFieldIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          stringField_ = new com.google.protobuf.LazyStringArrayList(stringField_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getStringFieldList() {
        return stringField_.getUnmodifiableView();
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public int getStringFieldCount() {
        return stringField_.size();
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public java.lang.String getStringField(int index) {
        return stringField_.get(index);
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public com.google.protobuf.ByteString
          getStringFieldBytes(int index) {
        return stringField_.getByteString(index);
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public Builder setStringField(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringFieldIsMutable();
        stringField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public Builder addStringField(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringFieldIsMutable();
        stringField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public Builder addAllStringField(
          java.lang.Iterable<java.lang.String> values) {
        ensureStringFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stringField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public Builder clearStringField() {
        stringField_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string string_field = 14;</code>
       */
      public Builder addStringFieldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureStringFieldIsMutable();
        stringField_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> bytesField_ = java.util.Collections.emptyList();
      private void ensureBytesFieldIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          bytesField_ = new java.util.ArrayList<com.google.protobuf.ByteString>(bytesField_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getBytesFieldList() {
        return java.util.Collections.unmodifiableList(bytesField_);
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public int getBytesFieldCount() {
        return bytesField_.size();
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public com.google.protobuf.ByteString getBytesField(int index) {
        return bytesField_.get(index);
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public Builder setBytesField(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesFieldIsMutable();
        bytesField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public Builder addBytesField(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesFieldIsMutable();
        bytesField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public Builder addAllBytesField(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureBytesFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bytesField_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes_field = 15;</code>
       */
      public Builder clearBytesField() {
        bytesField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> colorField_ =
        java.util.Collections.emptyList();
      private void ensureColorFieldIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          colorField_ = new java.util.ArrayList<java.lang.Integer>(colorField_);
          bitField0_ |= 0x00008000;
        }
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public java.util.List<io.protoless.tests.samples.Schemas.Color> getColorFieldList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, io.protoless.tests.samples.Schemas.Color>(colorField_, colorField_converter_);
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public int getColorFieldCount() {
        return colorField_.size();
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public io.protoless.tests.samples.Schemas.Color getColorField(int index) {
        return colorField_converter_.convert(colorField_.get(index));
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public Builder setColorField(
          int index, io.protoless.tests.samples.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorFieldIsMutable();
        colorField_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public Builder addColorField(io.protoless.tests.samples.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColorFieldIsMutable();
        colorField_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public Builder addAllColorField(
          java.lang.Iterable<? extends io.protoless.tests.samples.Schemas.Color> values) {
        ensureColorFieldIsMutable();
        for (io.protoless.tests.samples.Schemas.Color value : values) {
          colorField_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public Builder clearColorField() {
        colorField_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public java.util.List<java.lang.Integer>
      getColorFieldValueList() {
        return java.util.Collections.unmodifiableList(colorField_);
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public int getColorFieldValue(int index) {
        return colorField_.get(index);
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public Builder setColorFieldValue(
          int index, int value) {
        ensureColorFieldIsMutable();
        colorField_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public Builder addColorFieldValue(int value) {
        ensureColorFieldIsMutable();
        colorField_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public Builder addAllColorFieldValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureColorFieldIsMutable();
        for (int value : values) {
          colorField_.add(value);
        }
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.protoless.tests.samples.Repeated)
    }

    // @@protoc_insertion_point(class_scope:io.protoless.tests.samples.Repeated)
    private static final io.protoless.tests.samples.Schemas.Repeated DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.protoless.tests.samples.Schemas.Repeated();
    }

    public static io.protoless.tests.samples.Schemas.Repeated getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Repeated>
        PARSER = new com.google.protobuf.AbstractParser<Repeated>() {
      public Repeated parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Repeated(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Repeated> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Repeated> getParserForType() {
      return PARSER;
    }

    public io.protoless.tests.samples.Schemas.Repeated getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OneOfOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.protoless.tests.samples.OneOf)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double double_field = 1;</code>
     */
    double getDoubleField();

    /**
     * <code>float float_field = 2;</code>
     */
    float getFloatField();

    /**
     * <code>int32 int32_field = 3;</code>
     */
    int getInt32Field();

    /**
     * <code>int64 int64_field = 4;</code>
     */
    long getInt64Field();

    /**
     * <code>uint32 uint32_field = 5;</code>
     */
    int getUint32Field();

    /**
     * <code>uint64 uint64_field = 6;</code>
     */
    long getUint64Field();

    /**
     * <code>sint32 sint32_field = 7;</code>
     */
    int getSint32Field();

    /**
     * <code>sint64 sint64_field = 8;</code>
     */
    long getSint64Field();

    /**
     * <code>fixed32 fixed32_field = 9;</code>
     */
    int getFixed32Field();

    /**
     * <code>fixed64 fixed64_field = 10;</code>
     */
    long getFixed64Field();

    /**
     * <code>sfixed32 sfixed32_field = 11;</code>
     */
    int getSfixed32Field();

    /**
     * <code>sfixed64 sfixed64_field = 12;</code>
     */
    long getSfixed64Field();

    /**
     * <code>bool bool_field = 13;</code>
     */
    boolean getBoolField();

    /**
     * <code>string string_field = 14;</code>
     */
    java.lang.String getStringField();
    /**
     * <code>string string_field = 14;</code>
     */
    com.google.protobuf.ByteString
        getStringFieldBytes();

    /**
     * <code>bytes bytes_field = 15;</code>
     */
    com.google.protobuf.ByteString getBytesField();

    /**
     * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
     */
    int getColorFieldValue();
    /**
     * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
     */
    io.protoless.tests.samples.Schemas.Color getColorField();

    public io.protoless.tests.samples.Schemas.OneOf.FieldCase getFieldCase();
  }
  /**
   * Protobuf type {@code io.protoless.tests.samples.OneOf}
   */
  public  static final class OneOf extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.protoless.tests.samples.OneOf)
      OneOfOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OneOf.newBuilder() to construct.
    private OneOf(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OneOf() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OneOf(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              fieldCase_ = 1;
              field_ = input.readDouble();
              break;
            }
            case 21: {
              fieldCase_ = 2;
              field_ = input.readFloat();
              break;
            }
            case 24: {
              fieldCase_ = 3;
              field_ = input.readInt32();
              break;
            }
            case 32: {
              fieldCase_ = 4;
              field_ = input.readInt64();
              break;
            }
            case 40: {
              fieldCase_ = 5;
              field_ = input.readUInt32();
              break;
            }
            case 48: {
              fieldCase_ = 6;
              field_ = input.readUInt64();
              break;
            }
            case 56: {
              fieldCase_ = 7;
              field_ = input.readSInt32();
              break;
            }
            case 64: {
              fieldCase_ = 8;
              field_ = input.readSInt64();
              break;
            }
            case 77: {
              fieldCase_ = 9;
              field_ = input.readFixed32();
              break;
            }
            case 81: {
              fieldCase_ = 10;
              field_ = input.readFixed64();
              break;
            }
            case 93: {
              fieldCase_ = 11;
              field_ = input.readSFixed32();
              break;
            }
            case 97: {
              fieldCase_ = 12;
              field_ = input.readSFixed64();
              break;
            }
            case 104: {
              fieldCase_ = 13;
              field_ = input.readBool();
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();
              fieldCase_ = 14;
              field_ = s;
              break;
            }
            case 122: {
              fieldCase_ = 15;
              field_ = input.readBytes();
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              fieldCase_ = 16;
              field_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_OneOf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_OneOf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.protoless.tests.samples.Schemas.OneOf.class, io.protoless.tests.samples.Schemas.OneOf.Builder.class);
    }

    private int fieldCase_ = 0;
    private java.lang.Object field_;
    public enum FieldCase
        implements com.google.protobuf.Internal.EnumLite {
      DOUBLE_FIELD(1),
      FLOAT_FIELD(2),
      INT32_FIELD(3),
      INT64_FIELD(4),
      UINT32_FIELD(5),
      UINT64_FIELD(6),
      SINT32_FIELD(7),
      SINT64_FIELD(8),
      FIXED32_FIELD(9),
      FIXED64_FIELD(10),
      SFIXED32_FIELD(11),
      SFIXED64_FIELD(12),
      BOOL_FIELD(13),
      STRING_FIELD(14),
      BYTES_FIELD(15),
      COLOR_FIELD(16),
      FIELD_NOT_SET(0);
      private final int value;
      private FieldCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FieldCase valueOf(int value) {
        return forNumber(value);
      }

      public static FieldCase forNumber(int value) {
        switch (value) {
          case 1: return DOUBLE_FIELD;
          case 2: return FLOAT_FIELD;
          case 3: return INT32_FIELD;
          case 4: return INT64_FIELD;
          case 5: return UINT32_FIELD;
          case 6: return UINT64_FIELD;
          case 7: return SINT32_FIELD;
          case 8: return SINT64_FIELD;
          case 9: return FIXED32_FIELD;
          case 10: return FIXED64_FIELD;
          case 11: return SFIXED32_FIELD;
          case 12: return SFIXED64_FIELD;
          case 13: return BOOL_FIELD;
          case 14: return STRING_FIELD;
          case 15: return BYTES_FIELD;
          case 16: return COLOR_FIELD;
          case 0: return FIELD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public FieldCase
    getFieldCase() {
      return FieldCase.forNumber(
          fieldCase_);
    }

    public static final int DOUBLE_FIELD_FIELD_NUMBER = 1;
    /**
     * <code>double double_field = 1;</code>
     */
    public double getDoubleField() {
      if (fieldCase_ == 1) {
        return (java.lang.Double) field_;
      }
      return 0D;
    }

    public static final int FLOAT_FIELD_FIELD_NUMBER = 2;
    /**
     * <code>float float_field = 2;</code>
     */
    public float getFloatField() {
      if (fieldCase_ == 2) {
        return (java.lang.Float) field_;
      }
      return 0F;
    }

    public static final int INT32_FIELD_FIELD_NUMBER = 3;
    /**
     * <code>int32 int32_field = 3;</code>
     */
    public int getInt32Field() {
      if (fieldCase_ == 3) {
        return (java.lang.Integer) field_;
      }
      return 0;
    }

    public static final int INT64_FIELD_FIELD_NUMBER = 4;
    /**
     * <code>int64 int64_field = 4;</code>
     */
    public long getInt64Field() {
      if (fieldCase_ == 4) {
        return (java.lang.Long) field_;
      }
      return 0L;
    }

    public static final int UINT32_FIELD_FIELD_NUMBER = 5;
    /**
     * <code>uint32 uint32_field = 5;</code>
     */
    public int getUint32Field() {
      if (fieldCase_ == 5) {
        return (java.lang.Integer) field_;
      }
      return 0;
    }

    public static final int UINT64_FIELD_FIELD_NUMBER = 6;
    /**
     * <code>uint64 uint64_field = 6;</code>
     */
    public long getUint64Field() {
      if (fieldCase_ == 6) {
        return (java.lang.Long) field_;
      }
      return 0L;
    }

    public static final int SINT32_FIELD_FIELD_NUMBER = 7;
    /**
     * <code>sint32 sint32_field = 7;</code>
     */
    public int getSint32Field() {
      if (fieldCase_ == 7) {
        return (java.lang.Integer) field_;
      }
      return 0;
    }

    public static final int SINT64_FIELD_FIELD_NUMBER = 8;
    /**
     * <code>sint64 sint64_field = 8;</code>
     */
    public long getSint64Field() {
      if (fieldCase_ == 8) {
        return (java.lang.Long) field_;
      }
      return 0L;
    }

    public static final int FIXED32_FIELD_FIELD_NUMBER = 9;
    /**
     * <code>fixed32 fixed32_field = 9;</code>
     */
    public int getFixed32Field() {
      if (fieldCase_ == 9) {
        return (java.lang.Integer) field_;
      }
      return 0;
    }

    public static final int FIXED64_FIELD_FIELD_NUMBER = 10;
    /**
     * <code>fixed64 fixed64_field = 10;</code>
     */
    public long getFixed64Field() {
      if (fieldCase_ == 10) {
        return (java.lang.Long) field_;
      }
      return 0L;
    }

    public static final int SFIXED32_FIELD_FIELD_NUMBER = 11;
    /**
     * <code>sfixed32 sfixed32_field = 11;</code>
     */
    public int getSfixed32Field() {
      if (fieldCase_ == 11) {
        return (java.lang.Integer) field_;
      }
      return 0;
    }

    public static final int SFIXED64_FIELD_FIELD_NUMBER = 12;
    /**
     * <code>sfixed64 sfixed64_field = 12;</code>
     */
    public long getSfixed64Field() {
      if (fieldCase_ == 12) {
        return (java.lang.Long) field_;
      }
      return 0L;
    }

    public static final int BOOL_FIELD_FIELD_NUMBER = 13;
    /**
     * <code>bool bool_field = 13;</code>
     */
    public boolean getBoolField() {
      if (fieldCase_ == 13) {
        return (java.lang.Boolean) field_;
      }
      return false;
    }

    public static final int STRING_FIELD_FIELD_NUMBER = 14;
    /**
     * <code>string string_field = 14;</code>
     */
    public java.lang.String getStringField() {
      java.lang.Object ref = "";
      if (fieldCase_ == 14) {
        ref = field_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (fieldCase_ == 14) {
          field_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string string_field = 14;</code>
     */
    public com.google.protobuf.ByteString
        getStringFieldBytes() {
      java.lang.Object ref = "";
      if (fieldCase_ == 14) {
        ref = field_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (fieldCase_ == 14) {
          field_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTES_FIELD_FIELD_NUMBER = 15;
    /**
     * <code>bytes bytes_field = 15;</code>
     */
    public com.google.protobuf.ByteString getBytesField() {
      if (fieldCase_ == 15) {
        return (com.google.protobuf.ByteString) field_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int COLOR_FIELD_FIELD_NUMBER = 16;
    /**
     * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
     */
    public int getColorFieldValue() {
      if (fieldCase_ == 16) {
        return (java.lang.Integer) field_;
      }
      return 0;
    }
    /**
     * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
     */
    public io.protoless.tests.samples.Schemas.Color getColorField() {
      if (fieldCase_ == 16) {
        io.protoless.tests.samples.Schemas.Color result = io.protoless.tests.samples.Schemas.Color.valueOf(
            (java.lang.Integer) field_);
        return result == null ? io.protoless.tests.samples.Schemas.Color.UNRECOGNIZED : result;
      }
      return io.protoless.tests.samples.Schemas.Color.BLACK;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fieldCase_ == 1) {
        output.writeDouble(
            1, (double)((java.lang.Double) field_));
      }
      if (fieldCase_ == 2) {
        output.writeFloat(
            2, (float)((java.lang.Float) field_));
      }
      if (fieldCase_ == 3) {
        output.writeInt32(
            3, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 4) {
        output.writeInt64(
            4, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 5) {
        output.writeUInt32(
            5, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 6) {
        output.writeUInt64(
            6, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 7) {
        output.writeSInt32(
            7, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 8) {
        output.writeSInt64(
            8, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 9) {
        output.writeFixed32(
            9, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 10) {
        output.writeFixed64(
            10, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 11) {
        output.writeSFixed32(
            11, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 12) {
        output.writeSFixed64(
            12, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 13) {
        output.writeBool(
            13, (boolean)((java.lang.Boolean) field_));
      }
      if (fieldCase_ == 14) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, field_);
      }
      if (fieldCase_ == 15) {
        output.writeBytes(
            15, (com.google.protobuf.ByteString) field_);
      }
      if (fieldCase_ == 16) {
        output.writeEnum(16, ((java.lang.Integer) field_));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fieldCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(
              1, (double)((java.lang.Double) field_));
      }
      if (fieldCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(
              2, (float)((java.lang.Float) field_));
      }
      if (fieldCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              3, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              4, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              5, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(
              6, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(
              7, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(
              8, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(
              9, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(
              10, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(
              11, (int)((java.lang.Integer) field_));
      }
      if (fieldCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(
              12, (long)((java.lang.Long) field_));
      }
      if (fieldCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              13, (boolean)((java.lang.Boolean) field_));
      }
      if (fieldCase_ == 14) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, field_);
      }
      if (fieldCase_ == 15) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              15, (com.google.protobuf.ByteString) field_);
      }
      if (fieldCase_ == 16) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, ((java.lang.Integer) field_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.protoless.tests.samples.Schemas.OneOf)) {
        return super.equals(obj);
      }
      io.protoless.tests.samples.Schemas.OneOf other = (io.protoless.tests.samples.Schemas.OneOf) obj;

      boolean result = true;
      result = result && getFieldCase().equals(
          other.getFieldCase());
      if (!result) return false;
      switch (fieldCase_) {
        case 1:
          result = result && (
              java.lang.Double.doubleToLongBits(getDoubleField())
              == java.lang.Double.doubleToLongBits(
                  other.getDoubleField()));
          break;
        case 2:
          result = result && (
              java.lang.Float.floatToIntBits(getFloatField())
              == java.lang.Float.floatToIntBits(
                  other.getFloatField()));
          break;
        case 3:
          result = result && (getInt32Field()
              == other.getInt32Field());
          break;
        case 4:
          result = result && (getInt64Field()
              == other.getInt64Field());
          break;
        case 5:
          result = result && (getUint32Field()
              == other.getUint32Field());
          break;
        case 6:
          result = result && (getUint64Field()
              == other.getUint64Field());
          break;
        case 7:
          result = result && (getSint32Field()
              == other.getSint32Field());
          break;
        case 8:
          result = result && (getSint64Field()
              == other.getSint64Field());
          break;
        case 9:
          result = result && (getFixed32Field()
              == other.getFixed32Field());
          break;
        case 10:
          result = result && (getFixed64Field()
              == other.getFixed64Field());
          break;
        case 11:
          result = result && (getSfixed32Field()
              == other.getSfixed32Field());
          break;
        case 12:
          result = result && (getSfixed64Field()
              == other.getSfixed64Field());
          break;
        case 13:
          result = result && (getBoolField()
              == other.getBoolField());
          break;
        case 14:
          result = result && getStringField()
              .equals(other.getStringField());
          break;
        case 15:
          result = result && getBytesField()
              .equals(other.getBytesField());
          break;
        case 16:
          result = result && getColorFieldValue()
              == other.getColorFieldValue();
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (fieldCase_) {
        case 1:
          hash = (37 * hash) + DOUBLE_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getDoubleField()));
          break;
        case 2:
          hash = (37 * hash) + FLOAT_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getFloatField());
          break;
        case 3:
          hash = (37 * hash) + INT32_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + getInt32Field();
          break;
        case 4:
          hash = (37 * hash) + INT64_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getInt64Field());
          break;
        case 5:
          hash = (37 * hash) + UINT32_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + getUint32Field();
          break;
        case 6:
          hash = (37 * hash) + UINT64_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getUint64Field());
          break;
        case 7:
          hash = (37 * hash) + SINT32_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + getSint32Field();
          break;
        case 8:
          hash = (37 * hash) + SINT64_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getSint64Field());
          break;
        case 9:
          hash = (37 * hash) + FIXED32_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + getFixed32Field();
          break;
        case 10:
          hash = (37 * hash) + FIXED64_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getFixed64Field());
          break;
        case 11:
          hash = (37 * hash) + SFIXED32_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + getSfixed32Field();
          break;
        case 12:
          hash = (37 * hash) + SFIXED64_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getSfixed64Field());
          break;
        case 13:
          hash = (37 * hash) + BOOL_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBoolField());
          break;
        case 14:
          hash = (37 * hash) + STRING_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + getStringField().hashCode();
          break;
        case 15:
          hash = (37 * hash) + BYTES_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + getBytesField().hashCode();
          break;
        case 16:
          hash = (37 * hash) + COLOR_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + getColorFieldValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.protoless.tests.samples.Schemas.OneOf parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.OneOf parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.OneOf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.OneOf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.OneOf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.OneOf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.OneOf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.OneOf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.OneOf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.OneOf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.OneOf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.OneOf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.protoless.tests.samples.Schemas.OneOf prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.protoless.tests.samples.OneOf}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.protoless.tests.samples.OneOf)
        io.protoless.tests.samples.Schemas.OneOfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_OneOf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_OneOf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.protoless.tests.samples.Schemas.OneOf.class, io.protoless.tests.samples.Schemas.OneOf.Builder.class);
      }

      // Construct using io.protoless.tests.samples.Schemas.OneOf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fieldCase_ = 0;
        field_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_OneOf_descriptor;
      }

      public io.protoless.tests.samples.Schemas.OneOf getDefaultInstanceForType() {
        return io.protoless.tests.samples.Schemas.OneOf.getDefaultInstance();
      }

      public io.protoless.tests.samples.Schemas.OneOf build() {
        io.protoless.tests.samples.Schemas.OneOf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.protoless.tests.samples.Schemas.OneOf buildPartial() {
        io.protoless.tests.samples.Schemas.OneOf result = new io.protoless.tests.samples.Schemas.OneOf(this);
        if (fieldCase_ == 1) {
          result.field_ = field_;
        }
        if (fieldCase_ == 2) {
          result.field_ = field_;
        }
        if (fieldCase_ == 3) {
          result.field_ = field_;
        }
        if (fieldCase_ == 4) {
          result.field_ = field_;
        }
        if (fieldCase_ == 5) {
          result.field_ = field_;
        }
        if (fieldCase_ == 6) {
          result.field_ = field_;
        }
        if (fieldCase_ == 7) {
          result.field_ = field_;
        }
        if (fieldCase_ == 8) {
          result.field_ = field_;
        }
        if (fieldCase_ == 9) {
          result.field_ = field_;
        }
        if (fieldCase_ == 10) {
          result.field_ = field_;
        }
        if (fieldCase_ == 11) {
          result.field_ = field_;
        }
        if (fieldCase_ == 12) {
          result.field_ = field_;
        }
        if (fieldCase_ == 13) {
          result.field_ = field_;
        }
        if (fieldCase_ == 14) {
          result.field_ = field_;
        }
        if (fieldCase_ == 15) {
          result.field_ = field_;
        }
        if (fieldCase_ == 16) {
          result.field_ = field_;
        }
        result.fieldCase_ = fieldCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.protoless.tests.samples.Schemas.OneOf) {
          return mergeFrom((io.protoless.tests.samples.Schemas.OneOf)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.protoless.tests.samples.Schemas.OneOf other) {
        if (other == io.protoless.tests.samples.Schemas.OneOf.getDefaultInstance()) return this;
        switch (other.getFieldCase()) {
          case DOUBLE_FIELD: {
            setDoubleField(other.getDoubleField());
            break;
          }
          case FLOAT_FIELD: {
            setFloatField(other.getFloatField());
            break;
          }
          case INT32_FIELD: {
            setInt32Field(other.getInt32Field());
            break;
          }
          case INT64_FIELD: {
            setInt64Field(other.getInt64Field());
            break;
          }
          case UINT32_FIELD: {
            setUint32Field(other.getUint32Field());
            break;
          }
          case UINT64_FIELD: {
            setUint64Field(other.getUint64Field());
            break;
          }
          case SINT32_FIELD: {
            setSint32Field(other.getSint32Field());
            break;
          }
          case SINT64_FIELD: {
            setSint64Field(other.getSint64Field());
            break;
          }
          case FIXED32_FIELD: {
            setFixed32Field(other.getFixed32Field());
            break;
          }
          case FIXED64_FIELD: {
            setFixed64Field(other.getFixed64Field());
            break;
          }
          case SFIXED32_FIELD: {
            setSfixed32Field(other.getSfixed32Field());
            break;
          }
          case SFIXED64_FIELD: {
            setSfixed64Field(other.getSfixed64Field());
            break;
          }
          case BOOL_FIELD: {
            setBoolField(other.getBoolField());
            break;
          }
          case STRING_FIELD: {
            fieldCase_ = 14;
            field_ = other.field_;
            onChanged();
            break;
          }
          case BYTES_FIELD: {
            setBytesField(other.getBytesField());
            break;
          }
          case COLOR_FIELD: {
            setColorFieldValue(other.getColorFieldValue());
            break;
          }
          case FIELD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.protoless.tests.samples.Schemas.OneOf parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.protoless.tests.samples.Schemas.OneOf) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int fieldCase_ = 0;
      private java.lang.Object field_;
      public FieldCase
          getFieldCase() {
        return FieldCase.forNumber(
            fieldCase_);
      }

      public Builder clearField() {
        fieldCase_ = 0;
        field_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>double double_field = 1;</code>
       */
      public double getDoubleField() {
        if (fieldCase_ == 1) {
          return (java.lang.Double) field_;
        }
        return 0D;
      }
      /**
       * <code>double double_field = 1;</code>
       */
      public Builder setDoubleField(double value) {
        fieldCase_ = 1;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double double_field = 1;</code>
       */
      public Builder clearDoubleField() {
        if (fieldCase_ == 1) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>float float_field = 2;</code>
       */
      public float getFloatField() {
        if (fieldCase_ == 2) {
          return (java.lang.Float) field_;
        }
        return 0F;
      }
      /**
       * <code>float float_field = 2;</code>
       */
      public Builder setFloatField(float value) {
        fieldCase_ = 2;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float float_field = 2;</code>
       */
      public Builder clearFloatField() {
        if (fieldCase_ == 2) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int32 int32_field = 3;</code>
       */
      public int getInt32Field() {
        if (fieldCase_ == 3) {
          return (java.lang.Integer) field_;
        }
        return 0;
      }
      /**
       * <code>int32 int32_field = 3;</code>
       */
      public Builder setInt32Field(int value) {
        fieldCase_ = 3;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 int32_field = 3;</code>
       */
      public Builder clearInt32Field() {
        if (fieldCase_ == 3) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int64 int64_field = 4;</code>
       */
      public long getInt64Field() {
        if (fieldCase_ == 4) {
          return (java.lang.Long) field_;
        }
        return 0L;
      }
      /**
       * <code>int64 int64_field = 4;</code>
       */
      public Builder setInt64Field(long value) {
        fieldCase_ = 4;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 int64_field = 4;</code>
       */
      public Builder clearInt64Field() {
        if (fieldCase_ == 4) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>uint32 uint32_field = 5;</code>
       */
      public int getUint32Field() {
        if (fieldCase_ == 5) {
          return (java.lang.Integer) field_;
        }
        return 0;
      }
      /**
       * <code>uint32 uint32_field = 5;</code>
       */
      public Builder setUint32Field(int value) {
        fieldCase_ = 5;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 uint32_field = 5;</code>
       */
      public Builder clearUint32Field() {
        if (fieldCase_ == 5) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>uint64 uint64_field = 6;</code>
       */
      public long getUint64Field() {
        if (fieldCase_ == 6) {
          return (java.lang.Long) field_;
        }
        return 0L;
      }
      /**
       * <code>uint64 uint64_field = 6;</code>
       */
      public Builder setUint64Field(long value) {
        fieldCase_ = 6;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 uint64_field = 6;</code>
       */
      public Builder clearUint64Field() {
        if (fieldCase_ == 6) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>sint32 sint32_field = 7;</code>
       */
      public int getSint32Field() {
        if (fieldCase_ == 7) {
          return (java.lang.Integer) field_;
        }
        return 0;
      }
      /**
       * <code>sint32 sint32_field = 7;</code>
       */
      public Builder setSint32Field(int value) {
        fieldCase_ = 7;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 sint32_field = 7;</code>
       */
      public Builder clearSint32Field() {
        if (fieldCase_ == 7) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>sint64 sint64_field = 8;</code>
       */
      public long getSint64Field() {
        if (fieldCase_ == 8) {
          return (java.lang.Long) field_;
        }
        return 0L;
      }
      /**
       * <code>sint64 sint64_field = 8;</code>
       */
      public Builder setSint64Field(long value) {
        fieldCase_ = 8;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 sint64_field = 8;</code>
       */
      public Builder clearSint64Field() {
        if (fieldCase_ == 8) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>fixed32 fixed32_field = 9;</code>
       */
      public int getFixed32Field() {
        if (fieldCase_ == 9) {
          return (java.lang.Integer) field_;
        }
        return 0;
      }
      /**
       * <code>fixed32 fixed32_field = 9;</code>
       */
      public Builder setFixed32Field(int value) {
        fieldCase_ = 9;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 fixed32_field = 9;</code>
       */
      public Builder clearFixed32Field() {
        if (fieldCase_ == 9) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>fixed64 fixed64_field = 10;</code>
       */
      public long getFixed64Field() {
        if (fieldCase_ == 10) {
          return (java.lang.Long) field_;
        }
        return 0L;
      }
      /**
       * <code>fixed64 fixed64_field = 10;</code>
       */
      public Builder setFixed64Field(long value) {
        fieldCase_ = 10;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed64 fixed64_field = 10;</code>
       */
      public Builder clearFixed64Field() {
        if (fieldCase_ == 10) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>sfixed32 sfixed32_field = 11;</code>
       */
      public int getSfixed32Field() {
        if (fieldCase_ == 11) {
          return (java.lang.Integer) field_;
        }
        return 0;
      }
      /**
       * <code>sfixed32 sfixed32_field = 11;</code>
       */
      public Builder setSfixed32Field(int value) {
        fieldCase_ = 11;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed32 sfixed32_field = 11;</code>
       */
      public Builder clearSfixed32Field() {
        if (fieldCase_ == 11) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>sfixed64 sfixed64_field = 12;</code>
       */
      public long getSfixed64Field() {
        if (fieldCase_ == 12) {
          return (java.lang.Long) field_;
        }
        return 0L;
      }
      /**
       * <code>sfixed64 sfixed64_field = 12;</code>
       */
      public Builder setSfixed64Field(long value) {
        fieldCase_ = 12;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed64 sfixed64_field = 12;</code>
       */
      public Builder clearSfixed64Field() {
        if (fieldCase_ == 12) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool bool_field = 13;</code>
       */
      public boolean getBoolField() {
        if (fieldCase_ == 13) {
          return (java.lang.Boolean) field_;
        }
        return false;
      }
      /**
       * <code>bool bool_field = 13;</code>
       */
      public Builder setBoolField(boolean value) {
        fieldCase_ = 13;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool bool_field = 13;</code>
       */
      public Builder clearBoolField() {
        if (fieldCase_ == 13) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>string string_field = 14;</code>
       */
      public java.lang.String getStringField() {
        java.lang.Object ref = "";
        if (fieldCase_ == 14) {
          ref = field_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (fieldCase_ == 14) {
            field_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string string_field = 14;</code>
       */
      public com.google.protobuf.ByteString
          getStringFieldBytes() {
        java.lang.Object ref = "";
        if (fieldCase_ == 14) {
          ref = field_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (fieldCase_ == 14) {
            field_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string string_field = 14;</code>
       */
      public Builder setStringField(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  fieldCase_ = 14;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string string_field = 14;</code>
       */
      public Builder clearStringField() {
        if (fieldCase_ == 14) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string string_field = 14;</code>
       */
      public Builder setStringFieldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        fieldCase_ = 14;
        field_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>bytes bytes_field = 15;</code>
       */
      public com.google.protobuf.ByteString getBytesField() {
        if (fieldCase_ == 15) {
          return (com.google.protobuf.ByteString) field_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <code>bytes bytes_field = 15;</code>
       */
      public Builder setBytesField(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  fieldCase_ = 15;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes bytes_field = 15;</code>
       */
      public Builder clearBytesField() {
        if (fieldCase_ == 15) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public int getColorFieldValue() {
        if (fieldCase_ == 16) {
          return ((java.lang.Integer) field_).intValue();
        }
        return 0;
      }
      /**
       * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public Builder setColorFieldValue(int value) {
        fieldCase_ = 16;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public io.protoless.tests.samples.Schemas.Color getColorField() {
        if (fieldCase_ == 16) {
          io.protoless.tests.samples.Schemas.Color result = io.protoless.tests.samples.Schemas.Color.valueOf(
              (java.lang.Integer) field_);
          return result == null ? io.protoless.tests.samples.Schemas.Color.UNRECOGNIZED : result;
        }
        return io.protoless.tests.samples.Schemas.Color.BLACK;
      }
      /**
       * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public Builder setColorField(io.protoless.tests.samples.Schemas.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        fieldCase_ = 16;
        field_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.io.protoless.tests.samples.Color color_field = 16;</code>
       */
      public Builder clearColorField() {
        if (fieldCase_ == 16) {
          fieldCase_ = 0;
          field_ = null;
          onChanged();
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.protoless.tests.samples.OneOf)
    }

    // @@protoc_insertion_point(class_scope:io.protoless.tests.samples.OneOf)
    private static final io.protoless.tests.samples.Schemas.OneOf DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.protoless.tests.samples.Schemas.OneOf();
    }

    public static io.protoless.tests.samples.Schemas.OneOf getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OneOf>
        PARSER = new com.google.protobuf.AbstractParser<OneOf>() {
      public OneOf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OneOf(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OneOf> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OneOf> getParserForType() {
      return PARSER;
    }

    public io.protoless.tests.samples.Schemas.OneOf getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CustomOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.protoless.tests.samples.Custom)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string bigdecimal = 1;</code>
     */
    java.lang.String getBigdecimal();
    /**
     * <code>string bigdecimal = 1;</code>
     */
    com.google.protobuf.ByteString
        getBigdecimalBytes();

    /**
     * <code>string bigint = 2;</code>
     */
    java.lang.String getBigint();
    /**
     * <code>string bigint = 2;</code>
     */
    com.google.protobuf.ByteString
        getBigintBytes();

    /**
     * <code>repeated sint64 uuid = 3;</code>
     */
    java.util.List<java.lang.Long> getUuidList();
    /**
     * <code>repeated sint64 uuid = 3;</code>
     */
    int getUuidCount();
    /**
     * <code>repeated sint64 uuid = 3;</code>
     */
    long getUuid(int index);

    /**
     * <code>int32 short = 4;</code>
     */
    int getShort();

    /**
     * <code>int32 char = 5;</code>
     */
    int getChar();
  }
  /**
   * Protobuf type {@code io.protoless.tests.samples.Custom}
   */
  public  static final class Custom extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.protoless.tests.samples.Custom)
      CustomOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Custom.newBuilder() to construct.
    private Custom(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Custom() {
      bigdecimal_ = "";
      bigint_ = "";
      uuid_ = java.util.Collections.emptyList();
      short_ = 0;
      char_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Custom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              bigdecimal_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              bigint_ = s;
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                uuid_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              uuid_.add(input.readSInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                uuid_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                uuid_.add(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {

              short_ = input.readInt32();
              break;
            }
            case 40: {

              char_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          uuid_ = java.util.Collections.unmodifiableList(uuid_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Custom_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Custom_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.protoless.tests.samples.Schemas.Custom.class, io.protoless.tests.samples.Schemas.Custom.Builder.class);
    }

    private int bitField0_;
    public static final int BIGDECIMAL_FIELD_NUMBER = 1;
    private volatile java.lang.Object bigdecimal_;
    /**
     * <code>string bigdecimal = 1;</code>
     */
    public java.lang.String getBigdecimal() {
      java.lang.Object ref = bigdecimal_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bigdecimal_ = s;
        return s;
      }
    }
    /**
     * <code>string bigdecimal = 1;</code>
     */
    public com.google.protobuf.ByteString
        getBigdecimalBytes() {
      java.lang.Object ref = bigdecimal_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bigdecimal_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BIGINT_FIELD_NUMBER = 2;
    private volatile java.lang.Object bigint_;
    /**
     * <code>string bigint = 2;</code>
     */
    public java.lang.String getBigint() {
      java.lang.Object ref = bigint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bigint_ = s;
        return s;
      }
    }
    /**
     * <code>string bigint = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBigintBytes() {
      java.lang.Object ref = bigint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bigint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UUID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> uuid_;
    /**
     * <code>repeated sint64 uuid = 3;</code>
     */
    public java.util.List<java.lang.Long>
        getUuidList() {
      return uuid_;
    }
    /**
     * <code>repeated sint64 uuid = 3;</code>
     */
    public int getUuidCount() {
      return uuid_.size();
    }
    /**
     * <code>repeated sint64 uuid = 3;</code>
     */
    public long getUuid(int index) {
      return uuid_.get(index);
    }
    private int uuidMemoizedSerializedSize = -1;

    public static final int SHORT_FIELD_NUMBER = 4;
    private int short_;
    /**
     * <code>int32 short = 4;</code>
     */
    public int getShort() {
      return short_;
    }

    public static final int CHAR_FIELD_NUMBER = 5;
    private int char_;
    /**
     * <code>int32 char = 5;</code>
     */
    public int getChar() {
      return char_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getBigdecimalBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, bigdecimal_);
      }
      if (!getBigintBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, bigint_);
      }
      if (getUuidList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(uuidMemoizedSerializedSize);
      }
      for (int i = 0; i < uuid_.size(); i++) {
        output.writeSInt64NoTag(uuid_.get(i));
      }
      if (short_ != 0) {
        output.writeInt32(4, short_);
      }
      if (char_ != 0) {
        output.writeInt32(5, char_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getBigdecimalBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, bigdecimal_);
      }
      if (!getBigintBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, bigint_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uuid_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(uuid_.get(i));
        }
        size += dataSize;
        if (!getUuidList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        uuidMemoizedSerializedSize = dataSize;
      }
      if (short_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, short_);
      }
      if (char_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, char_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.protoless.tests.samples.Schemas.Custom)) {
        return super.equals(obj);
      }
      io.protoless.tests.samples.Schemas.Custom other = (io.protoless.tests.samples.Schemas.Custom) obj;

      boolean result = true;
      result = result && getBigdecimal()
          .equals(other.getBigdecimal());
      result = result && getBigint()
          .equals(other.getBigint());
      result = result && getUuidList()
          .equals(other.getUuidList());
      result = result && (getShort()
          == other.getShort());
      result = result && (getChar()
          == other.getChar());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BIGDECIMAL_FIELD_NUMBER;
      hash = (53 * hash) + getBigdecimal().hashCode();
      hash = (37 * hash) + BIGINT_FIELD_NUMBER;
      hash = (53 * hash) + getBigint().hashCode();
      if (getUuidCount() > 0) {
        hash = (37 * hash) + UUID_FIELD_NUMBER;
        hash = (53 * hash) + getUuidList().hashCode();
      }
      hash = (37 * hash) + SHORT_FIELD_NUMBER;
      hash = (53 * hash) + getShort();
      hash = (37 * hash) + CHAR_FIELD_NUMBER;
      hash = (53 * hash) + getChar();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.protoless.tests.samples.Schemas.Custom parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.Custom parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Custom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.Custom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Custom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.Custom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Custom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.Custom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Custom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.Custom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Custom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.Custom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.protoless.tests.samples.Schemas.Custom prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.protoless.tests.samples.Custom}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.protoless.tests.samples.Custom)
        io.protoless.tests.samples.Schemas.CustomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Custom_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Custom_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.protoless.tests.samples.Schemas.Custom.class, io.protoless.tests.samples.Schemas.Custom.Builder.class);
      }

      // Construct using io.protoless.tests.samples.Schemas.Custom.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        bigdecimal_ = "";

        bigint_ = "";

        uuid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        short_ = 0;

        char_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Custom_descriptor;
      }

      public io.protoless.tests.samples.Schemas.Custom getDefaultInstanceForType() {
        return io.protoless.tests.samples.Schemas.Custom.getDefaultInstance();
      }

      public io.protoless.tests.samples.Schemas.Custom build() {
        io.protoless.tests.samples.Schemas.Custom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.protoless.tests.samples.Schemas.Custom buildPartial() {
        io.protoless.tests.samples.Schemas.Custom result = new io.protoless.tests.samples.Schemas.Custom(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.bigdecimal_ = bigdecimal_;
        result.bigint_ = bigint_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          uuid_ = java.util.Collections.unmodifiableList(uuid_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.uuid_ = uuid_;
        result.short_ = short_;
        result.char_ = char_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.protoless.tests.samples.Schemas.Custom) {
          return mergeFrom((io.protoless.tests.samples.Schemas.Custom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.protoless.tests.samples.Schemas.Custom other) {
        if (other == io.protoless.tests.samples.Schemas.Custom.getDefaultInstance()) return this;
        if (!other.getBigdecimal().isEmpty()) {
          bigdecimal_ = other.bigdecimal_;
          onChanged();
        }
        if (!other.getBigint().isEmpty()) {
          bigint_ = other.bigint_;
          onChanged();
        }
        if (!other.uuid_.isEmpty()) {
          if (uuid_.isEmpty()) {
            uuid_ = other.uuid_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureUuidIsMutable();
            uuid_.addAll(other.uuid_);
          }
          onChanged();
        }
        if (other.getShort() != 0) {
          setShort(other.getShort());
        }
        if (other.getChar() != 0) {
          setChar(other.getChar());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.protoless.tests.samples.Schemas.Custom parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.protoless.tests.samples.Schemas.Custom) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object bigdecimal_ = "";
      /**
       * <code>string bigdecimal = 1;</code>
       */
      public java.lang.String getBigdecimal() {
        java.lang.Object ref = bigdecimal_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bigdecimal_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string bigdecimal = 1;</code>
       */
      public com.google.protobuf.ByteString
          getBigdecimalBytes() {
        java.lang.Object ref = bigdecimal_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bigdecimal_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string bigdecimal = 1;</code>
       */
      public Builder setBigdecimal(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bigdecimal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string bigdecimal = 1;</code>
       */
      public Builder clearBigdecimal() {
        
        bigdecimal_ = getDefaultInstance().getBigdecimal();
        onChanged();
        return this;
      }
      /**
       * <code>string bigdecimal = 1;</code>
       */
      public Builder setBigdecimalBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bigdecimal_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object bigint_ = "";
      /**
       * <code>string bigint = 2;</code>
       */
      public java.lang.String getBigint() {
        java.lang.Object ref = bigint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bigint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string bigint = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBigintBytes() {
        java.lang.Object ref = bigint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bigint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string bigint = 2;</code>
       */
      public Builder setBigint(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bigint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string bigint = 2;</code>
       */
      public Builder clearBigint() {
        
        bigint_ = getDefaultInstance().getBigint();
        onChanged();
        return this;
      }
      /**
       * <code>string bigint = 2;</code>
       */
      public Builder setBigintBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bigint_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> uuid_ = java.util.Collections.emptyList();
      private void ensureUuidIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          uuid_ = new java.util.ArrayList<java.lang.Long>(uuid_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated sint64 uuid = 3;</code>
       */
      public java.util.List<java.lang.Long>
          getUuidList() {
        return java.util.Collections.unmodifiableList(uuid_);
      }
      /**
       * <code>repeated sint64 uuid = 3;</code>
       */
      public int getUuidCount() {
        return uuid_.size();
      }
      /**
       * <code>repeated sint64 uuid = 3;</code>
       */
      public long getUuid(int index) {
        return uuid_.get(index);
      }
      /**
       * <code>repeated sint64 uuid = 3;</code>
       */
      public Builder setUuid(
          int index, long value) {
        ensureUuidIsMutable();
        uuid_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 uuid = 3;</code>
       */
      public Builder addUuid(long value) {
        ensureUuidIsMutable();
        uuid_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 uuid = 3;</code>
       */
      public Builder addAllUuid(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUuidIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uuid_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint64 uuid = 3;</code>
       */
      public Builder clearUuid() {
        uuid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int short_ ;
      /**
       * <code>int32 short = 4;</code>
       */
      public int getShort() {
        return short_;
      }
      /**
       * <code>int32 short = 4;</code>
       */
      public Builder setShort(int value) {
        
        short_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 short = 4;</code>
       */
      public Builder clearShort() {
        
        short_ = 0;
        onChanged();
        return this;
      }

      private int char_ ;
      /**
       * <code>int32 char = 5;</code>
       */
      public int getChar() {
        return char_;
      }
      /**
       * <code>int32 char = 5;</code>
       */
      public Builder setChar(int value) {
        
        char_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 char = 5;</code>
       */
      public Builder clearChar() {
        
        char_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.protoless.tests.samples.Custom)
    }

    // @@protoc_insertion_point(class_scope:io.protoless.tests.samples.Custom)
    private static final io.protoless.tests.samples.Schemas.Custom DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.protoless.tests.samples.Schemas.Custom();
    }

    public static io.protoless.tests.samples.Schemas.Custom getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Custom>
        PARSER = new com.google.protobuf.AbstractParser<Custom>() {
      public Custom parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Custom(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Custom> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Custom> getParserForType() {
      return PARSER;
    }

    public io.protoless.tests.samples.Schemas.Custom getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NestedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.protoless.tests.samples.Nested)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double d = 1;</code>
     */
    double getD();

    /**
     * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
     */
    boolean hasM1();
    /**
     * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
     */
    io.protoless.tests.samples.Schemas.Custom getM1();
    /**
     * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
     */
    io.protoless.tests.samples.Schemas.CustomOrBuilder getM1OrBuilder();

    /**
     * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
     */
    boolean hasM2();
    /**
     * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
     */
    io.protoless.tests.samples.Schemas.Custom getM2();
    /**
     * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
     */
    io.protoless.tests.samples.Schemas.CustomOrBuilder getM2OrBuilder();

    /**
     * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
     */
    java.util.List<io.protoless.tests.samples.Schemas.Custom> 
        getRmList();
    /**
     * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
     */
    io.protoless.tests.samples.Schemas.Custom getRm(int index);
    /**
     * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
     */
    int getRmCount();
    /**
     * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
     */
    java.util.List<? extends io.protoless.tests.samples.Schemas.CustomOrBuilder> 
        getRmOrBuilderList();
    /**
     * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
     */
    io.protoless.tests.samples.Schemas.CustomOrBuilder getRmOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code io.protoless.tests.samples.Nested}
   */
  public  static final class Nested extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.protoless.tests.samples.Nested)
      NestedOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Nested.newBuilder() to construct.
    private Nested(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Nested() {
      d_ = 0D;
      rm_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Nested(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {

              d_ = input.readDouble();
              break;
            }
            case 18: {
              io.protoless.tests.samples.Schemas.Custom.Builder subBuilder = null;
              if (m1_ != null) {
                subBuilder = m1_.toBuilder();
              }
              m1_ = input.readMessage(io.protoless.tests.samples.Schemas.Custom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(m1_);
                m1_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.protoless.tests.samples.Schemas.Custom.Builder subBuilder = null;
              if (m2_ != null) {
                subBuilder = m2_.toBuilder();
              }
              m2_ = input.readMessage(io.protoless.tests.samples.Schemas.Custom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(m2_);
                m2_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                rm_ = new java.util.ArrayList<io.protoless.tests.samples.Schemas.Custom>();
                mutable_bitField0_ |= 0x00000008;
              }
              rm_.add(
                  input.readMessage(io.protoless.tests.samples.Schemas.Custom.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          rm_ = java.util.Collections.unmodifiableList(rm_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Nested_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Nested_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.protoless.tests.samples.Schemas.Nested.class, io.protoless.tests.samples.Schemas.Nested.Builder.class);
    }

    private int bitField0_;
    public static final int D_FIELD_NUMBER = 1;
    private double d_;
    /**
     * <code>double d = 1;</code>
     */
    public double getD() {
      return d_;
    }

    public static final int M1_FIELD_NUMBER = 2;
    private io.protoless.tests.samples.Schemas.Custom m1_;
    /**
     * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
     */
    public boolean hasM1() {
      return m1_ != null;
    }
    /**
     * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
     */
    public io.protoless.tests.samples.Schemas.Custom getM1() {
      return m1_ == null ? io.protoless.tests.samples.Schemas.Custom.getDefaultInstance() : m1_;
    }
    /**
     * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
     */
    public io.protoless.tests.samples.Schemas.CustomOrBuilder getM1OrBuilder() {
      return getM1();
    }

    public static final int M2_FIELD_NUMBER = 3;
    private io.protoless.tests.samples.Schemas.Custom m2_;
    /**
     * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
     */
    public boolean hasM2() {
      return m2_ != null;
    }
    /**
     * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
     */
    public io.protoless.tests.samples.Schemas.Custom getM2() {
      return m2_ == null ? io.protoless.tests.samples.Schemas.Custom.getDefaultInstance() : m2_;
    }
    /**
     * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
     */
    public io.protoless.tests.samples.Schemas.CustomOrBuilder getM2OrBuilder() {
      return getM2();
    }

    public static final int RM_FIELD_NUMBER = 4;
    private java.util.List<io.protoless.tests.samples.Schemas.Custom> rm_;
    /**
     * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
     */
    public java.util.List<io.protoless.tests.samples.Schemas.Custom> getRmList() {
      return rm_;
    }
    /**
     * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
     */
    public java.util.List<? extends io.protoless.tests.samples.Schemas.CustomOrBuilder> 
        getRmOrBuilderList() {
      return rm_;
    }
    /**
     * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
     */
    public int getRmCount() {
      return rm_.size();
    }
    /**
     * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
     */
    public io.protoless.tests.samples.Schemas.Custom getRm(int index) {
      return rm_.get(index);
    }
    /**
     * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
     */
    public io.protoless.tests.samples.Schemas.CustomOrBuilder getRmOrBuilder(
        int index) {
      return rm_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (d_ != 0D) {
        output.writeDouble(1, d_);
      }
      if (m1_ != null) {
        output.writeMessage(2, getM1());
      }
      if (m2_ != null) {
        output.writeMessage(3, getM2());
      }
      for (int i = 0; i < rm_.size(); i++) {
        output.writeMessage(4, rm_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (d_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, d_);
      }
      if (m1_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getM1());
      }
      if (m2_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getM2());
      }
      for (int i = 0; i < rm_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, rm_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.protoless.tests.samples.Schemas.Nested)) {
        return super.equals(obj);
      }
      io.protoless.tests.samples.Schemas.Nested other = (io.protoless.tests.samples.Schemas.Nested) obj;

      boolean result = true;
      result = result && (
          java.lang.Double.doubleToLongBits(getD())
          == java.lang.Double.doubleToLongBits(
              other.getD()));
      result = result && (hasM1() == other.hasM1());
      if (hasM1()) {
        result = result && getM1()
            .equals(other.getM1());
      }
      result = result && (hasM2() == other.hasM2());
      if (hasM2()) {
        result = result && getM2()
            .equals(other.getM2());
      }
      result = result && getRmList()
          .equals(other.getRmList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + D_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getD()));
      if (hasM1()) {
        hash = (37 * hash) + M1_FIELD_NUMBER;
        hash = (53 * hash) + getM1().hashCode();
      }
      if (hasM2()) {
        hash = (37 * hash) + M2_FIELD_NUMBER;
        hash = (53 * hash) + getM2().hashCode();
      }
      if (getRmCount() > 0) {
        hash = (37 * hash) + RM_FIELD_NUMBER;
        hash = (53 * hash) + getRmList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.protoless.tests.samples.Schemas.Nested parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.Nested parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Nested parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.Nested parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Nested parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.protoless.tests.samples.Schemas.Nested parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Nested parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.Nested parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Nested parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.Nested parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.protoless.tests.samples.Schemas.Nested parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.protoless.tests.samples.Schemas.Nested parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.protoless.tests.samples.Schemas.Nested prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.protoless.tests.samples.Nested}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.protoless.tests.samples.Nested)
        io.protoless.tests.samples.Schemas.NestedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Nested_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Nested_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.protoless.tests.samples.Schemas.Nested.class, io.protoless.tests.samples.Schemas.Nested.Builder.class);
      }

      // Construct using io.protoless.tests.samples.Schemas.Nested.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRmFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        d_ = 0D;

        if (m1Builder_ == null) {
          m1_ = null;
        } else {
          m1_ = null;
          m1Builder_ = null;
        }
        if (m2Builder_ == null) {
          m2_ = null;
        } else {
          m2_ = null;
          m2Builder_ = null;
        }
        if (rmBuilder_ == null) {
          rm_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rmBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.protoless.tests.samples.Schemas.internal_static_io_protoless_tests_samples_Nested_descriptor;
      }

      public io.protoless.tests.samples.Schemas.Nested getDefaultInstanceForType() {
        return io.protoless.tests.samples.Schemas.Nested.getDefaultInstance();
      }

      public io.protoless.tests.samples.Schemas.Nested build() {
        io.protoless.tests.samples.Schemas.Nested result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.protoless.tests.samples.Schemas.Nested buildPartial() {
        io.protoless.tests.samples.Schemas.Nested result = new io.protoless.tests.samples.Schemas.Nested(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.d_ = d_;
        if (m1Builder_ == null) {
          result.m1_ = m1_;
        } else {
          result.m1_ = m1Builder_.build();
        }
        if (m2Builder_ == null) {
          result.m2_ = m2_;
        } else {
          result.m2_ = m2Builder_.build();
        }
        if (rmBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            rm_ = java.util.Collections.unmodifiableList(rm_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.rm_ = rm_;
        } else {
          result.rm_ = rmBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.protoless.tests.samples.Schemas.Nested) {
          return mergeFrom((io.protoless.tests.samples.Schemas.Nested)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.protoless.tests.samples.Schemas.Nested other) {
        if (other == io.protoless.tests.samples.Schemas.Nested.getDefaultInstance()) return this;
        if (other.getD() != 0D) {
          setD(other.getD());
        }
        if (other.hasM1()) {
          mergeM1(other.getM1());
        }
        if (other.hasM2()) {
          mergeM2(other.getM2());
        }
        if (rmBuilder_ == null) {
          if (!other.rm_.isEmpty()) {
            if (rm_.isEmpty()) {
              rm_ = other.rm_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRmIsMutable();
              rm_.addAll(other.rm_);
            }
            onChanged();
          }
        } else {
          if (!other.rm_.isEmpty()) {
            if (rmBuilder_.isEmpty()) {
              rmBuilder_.dispose();
              rmBuilder_ = null;
              rm_ = other.rm_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rmBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRmFieldBuilder() : null;
            } else {
              rmBuilder_.addAllMessages(other.rm_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.protoless.tests.samples.Schemas.Nested parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.protoless.tests.samples.Schemas.Nested) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double d_ ;
      /**
       * <code>double d = 1;</code>
       */
      public double getD() {
        return d_;
      }
      /**
       * <code>double d = 1;</code>
       */
      public Builder setD(double value) {
        
        d_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double d = 1;</code>
       */
      public Builder clearD() {
        
        d_ = 0D;
        onChanged();
        return this;
      }

      private io.protoless.tests.samples.Schemas.Custom m1_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.protoless.tests.samples.Schemas.Custom, io.protoless.tests.samples.Schemas.Custom.Builder, io.protoless.tests.samples.Schemas.CustomOrBuilder> m1Builder_;
      /**
       * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
       */
      public boolean hasM1() {
        return m1Builder_ != null || m1_ != null;
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
       */
      public io.protoless.tests.samples.Schemas.Custom getM1() {
        if (m1Builder_ == null) {
          return m1_ == null ? io.protoless.tests.samples.Schemas.Custom.getDefaultInstance() : m1_;
        } else {
          return m1Builder_.getMessage();
        }
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
       */
      public Builder setM1(io.protoless.tests.samples.Schemas.Custom value) {
        if (m1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          m1_ = value;
          onChanged();
        } else {
          m1Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
       */
      public Builder setM1(
          io.protoless.tests.samples.Schemas.Custom.Builder builderForValue) {
        if (m1Builder_ == null) {
          m1_ = builderForValue.build();
          onChanged();
        } else {
          m1Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
       */
      public Builder mergeM1(io.protoless.tests.samples.Schemas.Custom value) {
        if (m1Builder_ == null) {
          if (m1_ != null) {
            m1_ =
              io.protoless.tests.samples.Schemas.Custom.newBuilder(m1_).mergeFrom(value).buildPartial();
          } else {
            m1_ = value;
          }
          onChanged();
        } else {
          m1Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
       */
      public Builder clearM1() {
        if (m1Builder_ == null) {
          m1_ = null;
          onChanged();
        } else {
          m1_ = null;
          m1Builder_ = null;
        }

        return this;
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
       */
      public io.protoless.tests.samples.Schemas.Custom.Builder getM1Builder() {
        
        onChanged();
        return getM1FieldBuilder().getBuilder();
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
       */
      public io.protoless.tests.samples.Schemas.CustomOrBuilder getM1OrBuilder() {
        if (m1Builder_ != null) {
          return m1Builder_.getMessageOrBuilder();
        } else {
          return m1_ == null ?
              io.protoless.tests.samples.Schemas.Custom.getDefaultInstance() : m1_;
        }
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m1 = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.protoless.tests.samples.Schemas.Custom, io.protoless.tests.samples.Schemas.Custom.Builder, io.protoless.tests.samples.Schemas.CustomOrBuilder> 
          getM1FieldBuilder() {
        if (m1Builder_ == null) {
          m1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.protoless.tests.samples.Schemas.Custom, io.protoless.tests.samples.Schemas.Custom.Builder, io.protoless.tests.samples.Schemas.CustomOrBuilder>(
                  getM1(),
                  getParentForChildren(),
                  isClean());
          m1_ = null;
        }
        return m1Builder_;
      }

      private io.protoless.tests.samples.Schemas.Custom m2_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.protoless.tests.samples.Schemas.Custom, io.protoless.tests.samples.Schemas.Custom.Builder, io.protoless.tests.samples.Schemas.CustomOrBuilder> m2Builder_;
      /**
       * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
       */
      public boolean hasM2() {
        return m2Builder_ != null || m2_ != null;
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
       */
      public io.protoless.tests.samples.Schemas.Custom getM2() {
        if (m2Builder_ == null) {
          return m2_ == null ? io.protoless.tests.samples.Schemas.Custom.getDefaultInstance() : m2_;
        } else {
          return m2Builder_.getMessage();
        }
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
       */
      public Builder setM2(io.protoless.tests.samples.Schemas.Custom value) {
        if (m2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          m2_ = value;
          onChanged();
        } else {
          m2Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
       */
      public Builder setM2(
          io.protoless.tests.samples.Schemas.Custom.Builder builderForValue) {
        if (m2Builder_ == null) {
          m2_ = builderForValue.build();
          onChanged();
        } else {
          m2Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
       */
      public Builder mergeM2(io.protoless.tests.samples.Schemas.Custom value) {
        if (m2Builder_ == null) {
          if (m2_ != null) {
            m2_ =
              io.protoless.tests.samples.Schemas.Custom.newBuilder(m2_).mergeFrom(value).buildPartial();
          } else {
            m2_ = value;
          }
          onChanged();
        } else {
          m2Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
       */
      public Builder clearM2() {
        if (m2Builder_ == null) {
          m2_ = null;
          onChanged();
        } else {
          m2_ = null;
          m2Builder_ = null;
        }

        return this;
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
       */
      public io.protoless.tests.samples.Schemas.Custom.Builder getM2Builder() {
        
        onChanged();
        return getM2FieldBuilder().getBuilder();
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
       */
      public io.protoless.tests.samples.Schemas.CustomOrBuilder getM2OrBuilder() {
        if (m2Builder_ != null) {
          return m2Builder_.getMessageOrBuilder();
        } else {
          return m2_ == null ?
              io.protoless.tests.samples.Schemas.Custom.getDefaultInstance() : m2_;
        }
      }
      /**
       * <code>.io.protoless.tests.samples.Custom m2 = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.protoless.tests.samples.Schemas.Custom, io.protoless.tests.samples.Schemas.Custom.Builder, io.protoless.tests.samples.Schemas.CustomOrBuilder> 
          getM2FieldBuilder() {
        if (m2Builder_ == null) {
          m2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.protoless.tests.samples.Schemas.Custom, io.protoless.tests.samples.Schemas.Custom.Builder, io.protoless.tests.samples.Schemas.CustomOrBuilder>(
                  getM2(),
                  getParentForChildren(),
                  isClean());
          m2_ = null;
        }
        return m2Builder_;
      }

      private java.util.List<io.protoless.tests.samples.Schemas.Custom> rm_ =
        java.util.Collections.emptyList();
      private void ensureRmIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          rm_ = new java.util.ArrayList<io.protoless.tests.samples.Schemas.Custom>(rm_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.protoless.tests.samples.Schemas.Custom, io.protoless.tests.samples.Schemas.Custom.Builder, io.protoless.tests.samples.Schemas.CustomOrBuilder> rmBuilder_;

      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public java.util.List<io.protoless.tests.samples.Schemas.Custom> getRmList() {
        if (rmBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rm_);
        } else {
          return rmBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public int getRmCount() {
        if (rmBuilder_ == null) {
          return rm_.size();
        } else {
          return rmBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public io.protoless.tests.samples.Schemas.Custom getRm(int index) {
        if (rmBuilder_ == null) {
          return rm_.get(index);
        } else {
          return rmBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public Builder setRm(
          int index, io.protoless.tests.samples.Schemas.Custom value) {
        if (rmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRmIsMutable();
          rm_.set(index, value);
          onChanged();
        } else {
          rmBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public Builder setRm(
          int index, io.protoless.tests.samples.Schemas.Custom.Builder builderForValue) {
        if (rmBuilder_ == null) {
          ensureRmIsMutable();
          rm_.set(index, builderForValue.build());
          onChanged();
        } else {
          rmBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public Builder addRm(io.protoless.tests.samples.Schemas.Custom value) {
        if (rmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRmIsMutable();
          rm_.add(value);
          onChanged();
        } else {
          rmBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public Builder addRm(
          int index, io.protoless.tests.samples.Schemas.Custom value) {
        if (rmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRmIsMutable();
          rm_.add(index, value);
          onChanged();
        } else {
          rmBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public Builder addRm(
          io.protoless.tests.samples.Schemas.Custom.Builder builderForValue) {
        if (rmBuilder_ == null) {
          ensureRmIsMutable();
          rm_.add(builderForValue.build());
          onChanged();
        } else {
          rmBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public Builder addRm(
          int index, io.protoless.tests.samples.Schemas.Custom.Builder builderForValue) {
        if (rmBuilder_ == null) {
          ensureRmIsMutable();
          rm_.add(index, builderForValue.build());
          onChanged();
        } else {
          rmBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public Builder addAllRm(
          java.lang.Iterable<? extends io.protoless.tests.samples.Schemas.Custom> values) {
        if (rmBuilder_ == null) {
          ensureRmIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rm_);
          onChanged();
        } else {
          rmBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public Builder clearRm() {
        if (rmBuilder_ == null) {
          rm_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rmBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public Builder removeRm(int index) {
        if (rmBuilder_ == null) {
          ensureRmIsMutable();
          rm_.remove(index);
          onChanged();
        } else {
          rmBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public io.protoless.tests.samples.Schemas.Custom.Builder getRmBuilder(
          int index) {
        return getRmFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public io.protoless.tests.samples.Schemas.CustomOrBuilder getRmOrBuilder(
          int index) {
        if (rmBuilder_ == null) {
          return rm_.get(index);  } else {
          return rmBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public java.util.List<? extends io.protoless.tests.samples.Schemas.CustomOrBuilder> 
           getRmOrBuilderList() {
        if (rmBuilder_ != null) {
          return rmBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rm_);
        }
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public io.protoless.tests.samples.Schemas.Custom.Builder addRmBuilder() {
        return getRmFieldBuilder().addBuilder(
            io.protoless.tests.samples.Schemas.Custom.getDefaultInstance());
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public io.protoless.tests.samples.Schemas.Custom.Builder addRmBuilder(
          int index) {
        return getRmFieldBuilder().addBuilder(
            index, io.protoless.tests.samples.Schemas.Custom.getDefaultInstance());
      }
      /**
       * <code>repeated .io.protoless.tests.samples.Custom rm = 4;</code>
       */
      public java.util.List<io.protoless.tests.samples.Schemas.Custom.Builder> 
           getRmBuilderList() {
        return getRmFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.protoless.tests.samples.Schemas.Custom, io.protoless.tests.samples.Schemas.Custom.Builder, io.protoless.tests.samples.Schemas.CustomOrBuilder> 
          getRmFieldBuilder() {
        if (rmBuilder_ == null) {
          rmBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.protoless.tests.samples.Schemas.Custom, io.protoless.tests.samples.Schemas.Custom.Builder, io.protoless.tests.samples.Schemas.CustomOrBuilder>(
                  rm_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          rm_ = null;
        }
        return rmBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.protoless.tests.samples.Nested)
    }

    // @@protoc_insertion_point(class_scope:io.protoless.tests.samples.Nested)
    private static final io.protoless.tests.samples.Schemas.Nested DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.protoless.tests.samples.Schemas.Nested();
    }

    public static io.protoless.tests.samples.Schemas.Nested getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Nested>
        PARSER = new com.google.protobuf.AbstractParser<Nested>() {
      public Nested parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Nested(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Nested> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Nested> getParserForType() {
      return PARSER;
    }

    public io.protoless.tests.samples.Schemas.Nested getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_protoless_tests_samples_Optional_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_protoless_tests_samples_Optional_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_protoless_tests_samples_Repeated_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_protoless_tests_samples_Repeated_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_protoless_tests_samples_OneOf_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_protoless_tests_samples_OneOf_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_protoless_tests_samples_Custom_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_protoless_tests_samples_Custom_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_protoless_tests_samples_Nested_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_protoless_tests_samples_Nested_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037src/main/protobuf/schemas.proto\022\032io.pr" +
      "otoless.tests.samples\"\251\003\n\010Optional\022\024\n\014do" +
      "uble_field\030\001 \001(\001\022\023\n\013float_field\030\002 \001(\002\022\023\n" +
      "\013int32_field\030\003 \001(\005\022\023\n\013int64_field\030\004 \001(\003\022" +
      "\024\n\014uint32_field\030\005 \001(\r\022\024\n\014uint64_field\030\006 " +
      "\001(\004\022\024\n\014sint32_field\030\007 \001(\021\022\024\n\014sint64_fiel" +
      "d\030\010 \001(\022\022\025\n\rfixed32_field\030\t \001(\007\022\025\n\rfixed6" +
      "4_field\030\n \001(\006\022\026\n\016sfixed32_field\030\013 \001(\017\022\026\n" +
      "\016sfixed64_field\030\014 \001(\020\022\022\n\nbool_field\030\r \001(" +
      "\010\022\024\n\014string_field\030\016 \001(\t\022\023\n\013bytes_field\030\017" +
      " \001(\014\0226\n\013color_field\030\020 \001(\0162!.io.protoless" +
      ".tests.samples.Color\022\033\n\023zeroed_uint32_fi" +
      "eld\030\021 \001(\r\"\214\003\n\010Repeated\022\024\n\014double_field\030\001" +
      " \003(\001\022\023\n\013float_field\030\002 \003(\002\022\023\n\013int32_field" +
      "\030\003 \003(\005\022\023\n\013int64_field\030\004 \003(\003\022\024\n\014uint32_fi" +
      "eld\030\005 \003(\r\022\024\n\014uint64_field\030\006 \003(\004\022\024\n\014sint3" +
      "2_field\030\007 \003(\021\022\024\n\014sint64_field\030\010 \003(\022\022\025\n\rf" +
      "ixed32_field\030\t \003(\007\022\025\n\rfixed64_field\030\n \003(" +
      "\006\022\026\n\016sfixed32_field\030\013 \003(\017\022\026\n\016sfixed64_fi" +
      "eld\030\014 \003(\020\022\022\n\nbool_field\030\r \003(\010\022\024\n\014string_" +
      "field\030\016 \003(\t\022\023\n\013bytes_field\030\017 \003(\014\0226\n\013colo" +
      "r_field\030\020 \003(\0162!.io.protoless.tests.sampl" +
      "es.Color\"\262\003\n\005OneOf\022\026\n\014double_field\030\001 \001(\001" +
      "H\000\022\025\n\013float_field\030\002 \001(\002H\000\022\025\n\013int32_field" +
      "\030\003 \001(\005H\000\022\025\n\013int64_field\030\004 \001(\003H\000\022\026\n\014uint3" +
      "2_field\030\005 \001(\rH\000\022\026\n\014uint64_field\030\006 \001(\004H\000\022" +
      "\026\n\014sint32_field\030\007 \001(\021H\000\022\026\n\014sint64_field\030" +
      "\010 \001(\022H\000\022\027\n\rfixed32_field\030\t \001(\007H\000\022\027\n\rfixe" +
      "d64_field\030\n \001(\006H\000\022\030\n\016sfixed32_field\030\013 \001(" +
      "\017H\000\022\030\n\016sfixed64_field\030\014 \001(\020H\000\022\024\n\nbool_fi" +
      "eld\030\r \001(\010H\000\022\026\n\014string_field\030\016 \001(\tH\000\022\025\n\013b" +
      "ytes_field\030\017 \001(\014H\000\0228\n\013color_field\030\020 \001(\0162" +
      "!.io.protoless.tests.samples.ColorH\000B\007\n\005" +
      "field\"W\n\006Custom\022\022\n\nbigdecimal\030\001 \001(\t\022\016\n\006b" +
      "igint\030\002 \001(\t\022\014\n\004uuid\030\003 \003(\022\022\r\n\005short\030\004 \001(\005" +
      "\022\014\n\004char\030\005 \001(\005\"\243\001\n\006Nested\022\t\n\001d\030\001 \001(\001\022.\n\002" +
      "m1\030\002 \001(\0132\".io.protoless.tests.samples.Cu" +
      "stom\022.\n\002m2\030\003 \001(\0132\".io.protoless.tests.sa" +
      "mples.Custom\022.\n\002rm\030\004 \003(\0132\".io.protoless." +
      "tests.samples.Custom*(\n\005Color\022\t\n\005BLACK\020\000" +
      "\022\t\n\005WHITE\020\001\022\t\n\005GREEN\020\002b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_io_protoless_tests_samples_Optional_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_io_protoless_tests_samples_Optional_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_protoless_tests_samples_Optional_descriptor,
        new java.lang.String[] { "DoubleField", "FloatField", "Int32Field", "Int64Field", "Uint32Field", "Uint64Field", "Sint32Field", "Sint64Field", "Fixed32Field", "Fixed64Field", "Sfixed32Field", "Sfixed64Field", "BoolField", "StringField", "BytesField", "ColorField", "ZeroedUint32Field", });
    internal_static_io_protoless_tests_samples_Repeated_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_io_protoless_tests_samples_Repeated_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_protoless_tests_samples_Repeated_descriptor,
        new java.lang.String[] { "DoubleField", "FloatField", "Int32Field", "Int64Field", "Uint32Field", "Uint64Field", "Sint32Field", "Sint64Field", "Fixed32Field", "Fixed64Field", "Sfixed32Field", "Sfixed64Field", "BoolField", "StringField", "BytesField", "ColorField", });
    internal_static_io_protoless_tests_samples_OneOf_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_io_protoless_tests_samples_OneOf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_protoless_tests_samples_OneOf_descriptor,
        new java.lang.String[] { "DoubleField", "FloatField", "Int32Field", "Int64Field", "Uint32Field", "Uint64Field", "Sint32Field", "Sint64Field", "Fixed32Field", "Fixed64Field", "Sfixed32Field", "Sfixed64Field", "BoolField", "StringField", "BytesField", "ColorField", "Field", });
    internal_static_io_protoless_tests_samples_Custom_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_io_protoless_tests_samples_Custom_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_protoless_tests_samples_Custom_descriptor,
        new java.lang.String[] { "Bigdecimal", "Bigint", "Uuid", "Short", "Char", });
    internal_static_io_protoless_tests_samples_Nested_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_io_protoless_tests_samples_Nested_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_protoless_tests_samples_Nested_descriptor,
        new java.lang.String[] { "D", "M1", "M2", "Rm", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
